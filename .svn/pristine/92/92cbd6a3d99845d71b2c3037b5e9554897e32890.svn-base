package com.web.ddentist.hospital.rcvmt.service;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.web.ddentist.mapper.RcvmtMapper;
import com.web.ddentist.vo.CheckupVO;
import com.web.ddentist.vo.RcvmtVO;
import com.web.ddentist.vo.ReceiptVO;

@Service
public class RcvmtServiceImpl implements IRcvmtService {
	
	@Autowired
	private RcvmtMapper rcvmtMapper;
	
	@Override
	public List<RcvmtVO> listWaitingRcvmt() {
		return rcvmtMapper.listWaitingRcvmt();
	}
	
	@Override
	public List<RcvmtVO> listCompletedRcvmt() {
		return rcvmtMapper.listCompletedRcvmt();
	}
	
	@Override
	public RcvmtVO selectRcvmt(String rcvmtNum) {
		return rcvmtMapper.selectRcvmt(rcvmtNum);
	}
	
	@Override
	public List<CheckupVO> listPtChkupHist(String ptNum) {
		return rcvmtMapper.listPtChkupHist(ptNum);
	}
	
	@Override
	public List<RcvmtVO> listPtRcvmtHist(String ptNum) {
		return rcvmtMapper.listPtRcvmtHist(ptNum);
	}
	
	@Transactional
	@Override
	public String payInCash(ReceiptVO rctVO) {
		int result = rcvmtMapper.completeRcvmt(rctVO);
		if(result == 0) return "FAILED";
		result = rcvmtMapper.payInCash(rctVO);
		if(result == 0) return "FAILED";
		return "SUCCESS";
	}
	
	@Transactional
	@Override
	public String payInCard(ReceiptVO rctVO) { // 카드결제 정보입력 해야 합니다.
		int result = rcvmtMapper.completeRcvmt(rctVO);
		if(result == 0) return "FAILED";
		result = rcvmtMapper.payInCard(rctVO);
		if(result == 0) return "FAILED";
		return "SUCCESS";
	}
	
	@Override
	public List<RcvmtVO> searchRcvmtHistList(Map<String, String> searchMap) {
		return rcvmtMapper.searchRcvmtHistList(searchMap);
	}
	
	@Transactional
	@Override
	public String payInCashOnRcvmtHist(ReceiptVO rctVO) {
		int result = rcvmtMapper.payInCash(rctVO);
		if(result == 0) return "FAILED";
//		result = rcvmtMapper.updateRcvmtBalance(rctVO);
//		if(result == 0) return "FAILED";
		return "SUCCESS";
	}
	
	@Transactional
	@Override
	public String payInCardOnRcvmtHist(ReceiptVO rctVO) {
		int result = rcvmtMapper.payInCard(rctVO);
		if(result == 0) return "FAILED";
//		result = rcvmtMapper.updateRcvmtBalance(rctVO);
//		if(result == 0) return "FAILED";
		return "SUCCESS";
	}

	@Override
	public List<ReceiptVO> searchRctHistList(Map<String, String> searchMap) {
		return rcvmtMapper.searchRctHistList(searchMap);
	}
	
	@Override
	public ReceiptVO selectRctHist(ReceiptVO rctVO) {
		return rcvmtMapper.selectRctHist(rctVO);
	}
	
	@Override
	public String refundRct(ReceiptVO rctVO) {
		int result = rcvmtMapper.refundRct(rctVO);
		if(result == 0) return "FAILED";
		result = rcvmtMapper.cancelRctHistAfterRefund(rctVO);
		if(result == 0) return "FAILED";
		return "SUCCESS";
	}
	
}
