package com.web.ddentist.ddit.preservation.service;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.web.ddentist.hospital.crm.sms.util.SmsSendUtil;
import com.web.ddentist.mapper.PreservationMapper;
import com.web.ddentist.vo.PatientVO;
import com.web.ddentist.vo.ReservationVO;

@Service
public class PreservationImpl implements IPreservationService {
	
	@Autowired
	private PreservationMapper presvMapper;
	@Autowired
	private SmsSendUtil smsSendUtil;
	
	@Override
	public String sendAuthNum(Map<String, String> paramMap, HttpSession session) {
		
//		String ptPhone = paramMap.get("ptPhone");
//		String authNum = String.valueOf((int) (Math.random() * 899999) + 100000);
//		String content = "본인확인 인증번호 [" + authNum + "]를 입력해주세요.";
//		try {
//			smsSendUtil.sendSms(ptPhone, content);
//		} catch (Exception e) {
//			return "FAILED";
//		}
//		session.setAttribute("authNum", authNum);
		session.setAttribute("authNum", "123456");
		return "SUCCESS";
	}
	
	@Override
	public String checkAuthNum(Map<String, String> paramMap, HttpSession session) {
		String authNum = paramMap.get("authNum");
//		String sendedAuthNum = (String) session.getAttribute("authNum");
//		if(authNum.equals(sendedAuthNum)) return "SUCCESS";
		if(authNum.equals("123456")) return "SUCCESS";
		return "FAILED";
	}
	
	@Override
	public List<ReservationVO> listPresv(Map<String, String> paramMap) {
		PatientVO ptVO = new PatientVO();
		ptVO.setPtNm(paramMap.get("ptNm"));
		String ptRrno = paramMap.get("ptRrno1") + paramMap.get("ptRrno2");
		ptVO.setPtRrno(ptRrno);
		String ptNum = presvMapper.selectPtNum(ptVO);
		if(ptNum == null) return null;
		return presvMapper.listPresv(ptNum);
	}
	
	@Override
	public List<ReservationVO> listNonPresv(Map<String, String> paramMap) {
		PatientVO ptVO = new PatientVO();
		ptVO.setPtNm(paramMap.get("ptNm"));
		String ptPhone = paramMap.get("ptPhone1") + paramMap.get("ptPhone2") + paramMap.get("ptPhone3");
		ptVO.setPtPhone(ptPhone);
		return presvMapper.listNonPresv(ptVO);
	}
	
}
