package com.web.ddentist.ddit.pdocument.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.web.ddentist.ddit.pdocument.service.IPdocument;
import com.web.ddentist.patient.service.PatientDetails;
import com.web.ddentist.vo.DocumentVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/ddit/document")
public class PdocumentController {

//	세션 정보 불러오기
//	PatientDetails ptInfo = (PatientDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
//	String ptNum = ptInfo.getPtVO().getPtNum();
	
	
	@Autowired
	private IPdocument dService;
	
	@GetMapping("")
	public String getDocument(DocumentVO documentVO, Model model) {
		
		List<DocumentVO> docList = this.dService.getDList(documentVO);
		
		model.addAttribute("docList",docList);
		
		log.info("docList:"+docList);
		
		return "ddit/pdocument";
	}
	
	@ResponseBody
	@PostMapping("/checkbox")
	public List<DocumentVO> checkBox(@RequestBody DocumentVO documentVO) {
		
		log.info("documentVO : " + documentVO);
		
		List<DocumentVO> checkBox = this.dService.checkBox(documentVO);
		
		return checkBox;
		
	}
	
	@GetMapping("/reissuance")
	public String getReissuance(DocumentVO documentVO, Model model) {
		
		log.info("reissue에 왔다");
		
		documentVO=this.dService.getReissuance(documentVO);
		log.info("documentVO reissuance : "  + documentVO);
		
		model.addAttribute("documentVO",documentVO);
		
		return "ddit/pdocumentReissuance";
	}
	
	@GetMapping("/pdocumentLocker")
	public String pdocumentLocker(DocumentVO documentVO, Model model) {
		
		log.info("documentVO:"+documentVO);
		
		int result=this.dService.getLockerUpdate(documentVO); //발급횟수 없데이트
		
		log.info("result: " + result);
		
		List<DocumentVO> LockerList = this.dService.getLockerList(documentVO); //서류보관함 리스트
		
		model.addAttribute("LockerList",LockerList);
		
		log.info("---------LockerList:"+LockerList);
		
		return "ddit/pdocumentLocker";
		
	}
	
}

