<%@ page language="java" contentType="text/html; charset=UTF-8" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>

<style>
.crmMenu .nav-link{
	font-family: 'Noto Sans KR', sans-serif;
}
td{
	vertical-align: middle !important;
}
.noticeRow, .inquiryRow{
	cursor: pointer;
}
#inqContent p, .note-editable p{
	margin: 0px;
}
.overflow-auto::-webkit-scrollbar{
	display: none;
}

/* Button Css */
#listBoardBtn{
	width:100px;
	background:#904aff;
	border:none;
	font-family: 'Noto Sans KR', sans-serif;
	font-weight: 500;
}
.newBtn{
	width:100px;
	background:#904aff;
	border:none;
	font-family: 'Noto Sans KR', sans-serif;
	font-weight: 500;
}
.saveBtn, .deleteBtn{
	width:100px;
	font-family: 'Noto Sans KR', sans-serif;
	font-weight: 500;
}
.navbar-light .navbar-nav .nav-link {
	color: #f8f9fa;
	margin-left: 0.5rem;
	height: 38px;
	padding: 0.25rem;
	display: flex;
	align-items: center;
}
/* 게시판 카드 헤더의 버튼 CSS */
.card-info:not(.card-outline)>.card-header a{
	color: #f8f9fa;
	margin-left: 0.5rem;
	height: 26px;
	padding: 0.25rem;
	display: flex;
	align-items: center;
}
.card-info:not(.card-outline)>.card-header a:hover{
	color: #1f2d3d;
}
/* 게시판 카드 헤더의 버튼 CSS */
</style>

<!-- summernote -->
<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.css" rel="stylesheet">
<script src="/resources/summernote-0.8.18-dist/lang/summernote-ko-KR.js"></script>

<div class="content-wrapper" style="background-color: #657D96;">
	<!-- main 검색창을 포함한 navbar 시작-->
	<nav class="navbar navbar-expand navbar-white navbar-light" style="background-color: #404b57;">
		<div class="input-group" style="width: 400px;">
			<input type="text" class="form-control" id="boardSearch" placeholder="게시글 검색" autocomplete="off" />
			<div class="input-group-append">
				<button type="button" id="boardSearchBtn" class="btn btn-outline-light" onclick="listNotice();">검색</button>
			</div>
		</div>
		<ul class="navbar-nav ml-auto">
		</ul>
		<div class="crmMenu">
			<ul class="navbar-nav mb-0">
				<li class="nav-item">
					<a href="/hospital/sms" class="nav-link btn btn-outline-light">SMS</a>
				</li>
				<li class="nav-item">
					<a href="/hospital/board" class="nav-link btn btn-outline-light active">게시판 관리</a>
				</li>
			</ul>
		</div>
	</nav>

	<section class="content" style="margin-top: 1%;">
		<div class="row" style="height: 800px;">
			<!-- 게시글 목록 시작 -->
			<div class="col-md-4" style="height: 100%;">
				<div class="card card-info" style="height: 100%;">
					<div class="navbar navbar-expand card-header" style="background-color: #404b57;">
						<div class="card-title">
							<h4 class="m-0">게시판</h4>
						</div>
						<ul class="navbar-nav ml-auto"></ul>
						<div class="boardMenuDiv">
							<ul class="navbar-nav mb-0">
								<li class="nav-item">
									<a href="#" class="nav-link btn btn-outline-light btn-sm active" onclick="changeBoard('notice');">공지사항</a>
								</li>
								<li class="nav-item">
									<a href="#" class="nav-link btn btn-outline-light btn-sm" onclick="changeBoard('inquiry');">문의 게시판</a>
								</li>
							</ul>
						</div>
					</div>
					<div class="card-body p-2 text-right" style="height: 46px; min-height: 46px; max-height: 46px; border-bottom:1px solid #e1e1e1;">
						<input hidden="text" id="ptNum" />
						<input type="date" id="boardSDate" /> ~ <input type="date" id="boardEDate" />
						<button type="button" id="listBoardBtn" class="btn btn-primary btn-sm align-top ml-1">검색</button>
					</div>
					<!-- 공지사항 목록 시작 -->
					<div id="noticeBoardList" class="card-body boardDiv overflow-auto p-0">
						<table class="table table-hover text-center">
							<thead class="sticky-top bg-white">
								<tr>
									<th style="width: 25%;"></th>
									<th style="width: 25%;">제목</th>
									<th style="width: 50%;">작성일</th>
								</tr>
							</thead>
							<!-- 공지사항 목록 Body 시작 -->
							<tbody id="noticeBoardListBody"></tbody>
							<!-- 공지사항 목록 Body 끝 -->
						</table>
					</div>
					<!-- 공지사항 목록 끝 -->
					<!-- 문의게시판 목록 시작 -->
					<div id="inquiryBoardList" class="card-body boardDiv overflow-auto p-0 d-none">
						<table class="table table-hover text-center">
							<thead class="sticky-top bg-white">
								<tr>
									<th style="width: 15%;"></th>
									<th style="width: 35%;">제목</th>
									<th style="width: 25%;">작성일</th>
									<th style="width: 25%;">답변</th>
								</tr>
							</thead>
							<!-- 문의게시판 목록 Body 시작 -->
							<tbody id="inquiryBoardListBody"></tbody>
							<!-- 문의게시판 목록 Body 끝 -->
						</table>
					</div>
					<!-- 문의게시판 목록 끝 -->
				</div>
			</div>
			<!-- 게시글 목록 시작 -->
			<!-- 게시글 상세 시작 -->
			<div class="col-md-8" style="min-height: 100%;">
				<div class="card card-info" style="min-height: 100%;">
					<div class="card-header" style="background-color: #404b57;">
						<div class="card-title">
							<h4 id="selectedBoardName" class="m-0">공지사항</h4>
						</div>
					</div>
					<!-- 공지사항 게시글 상세 시작 -->
					<div id="noticeBoard" class="card-body boardDiv">
						<form name="noticeForm" action="/hospital/board/insertNotice">
							<input type="hidden" id="noNum" name="noNum" />
							<div class="form-group">
								<label for="noTitle">제목</label>
								<input type="text" class="form-control" id="noTitle" name="noTitle" />
							</div>
							<div class="form-group">
								<label>내용</label>
								<textarea class="form-control" id="noContent" name="noContent"></textarea>
							</div>
							<div class="my-2 d-inline-block">
								<table class="table table-sm table-bordered text-center">
									<tr>
										<th style="width: 100px;" scope="row">등록일</th>
										<td id="noticeDate" style="width: 180px;"></td>
									</tr>
									<tr>
										<th style="width: 100px;" scope="row">최종 작성자</th>
										<td id="noticeLastWriter" style="width: 180px;"></td>
									</tr>
									<tr>
										<th style="width: 100px;" scope="row">최종 수정일</th>
										<td id="noticeLastUpdateDate" style="width: 180px;"></td>
									</tr>
								</table>
<!-- 								등록일 : <span id="noticeDate"></span><br /> -->
<!-- 								최종 작성자 : <span id="noticeLastWriter"></span><br /> -->
<!-- 								최종 수정일 : <span id="noticeLastUpdateDate"></span> -->
							</div>
							<div class="d-flex justify-content-between align-items-center">
								<button type="button" class="btn btn-primary newBtn" onclick="resetNoticeForm();">새로등록</button>
								<div>
									<button type="button" class="btn btn-success saveBtn" onclick="saveNotice();">저장</button>
									<button type="button" class="btn btn-danger deleteBtn" onclick="deleteNoticeAlert();">삭제</button>
								</div>
							</div>
						</form>
					</div>
					<!-- 공지사항 게시글 상세 끝 -->
					<!-- 문의게시판 게시글 상세 시작 -->
					<div id="inquiryBoard" class="card-body boardDiv d-none">
						<div id="inquiryBoardContent" style="min-height: 40%;">
							<table class="table text-center mb-0">
								<thead>
									<tr>
										<th style="width: 70%;">제목</th>
										<th style="width: 15%;">작성자</th>
										<th style="width: 15%;">작성일</th>
									</tr>
								</thead>
								<tbody>
									<tr>
										<td id="inqTitle">문의글을 선택해주세요.</td>
										<td id="inqWrtrNm"></td>
										<td id="inqDtStr"></td>
									</tr>
								</tbody>
							</table>
							<hr class="mt-0" />
							<label>내용</label>
							<div class="border p-2" id="inqContent" style="min-height: 120px;"></div>
						</div>
						<hr />
						<form name="answerForm" action="/hospital/board/insertAnswer">
							<div class="form-group">
								<label for="ansContent">답변</label>
								<input type="hidden" id="inqNum" name="inqNum" />
								<textarea class="form-control" id="ansContent" name="ansContent"></textarea>
							</div>
						</form>
						<div class="my-2 d-inline-block">
							<table class="table table-sm table-bordered text-center">
								<tr>
									<th style="width: 100px;" scope="row">등록일</th>
									<td id="answerDate" style="width: 180px;"></td>
								</tr>
								<tr>
									<th style="width: 100px;" scope="row">최종 작성자</th>
									<td id="answerLastWriter" style="width: 180px;"></td>
								</tr>
								<tr>
									<th style="width: 100px;" scope="row">최종 수정일</th>
									<td id="answerLastUpdateDate" style="width: 180px;"></td>
								</tr>
							</table>
<!-- 							등록일 : <span id="answerDate"></span> -->
<!-- 							최종 작성자 : <span id="answerLastWriter"></span><br /> -->
<!-- 							최종 수정일 : <span id="answerLastUpdateDate"></span> -->
						</div>
						<div class="text-right">
							<button type="button" class="btn btn-success saveBtn" onclick="saveAnswer();">저장</button>
							<button type="button" class="btn btn-danger deleteBtn" onclick="deleteInquiryAnswerAlert();">삭제</button>
						</div>
					</div>
					<!-- 문의게시판 게시글 상세 끝 -->
				</div>
			</div>
			<!-- 게시글 상세 끝 -->
		</div>
	</section>
</div>
<script>

// 게시판 카드의 버튼 클릭 시 활성화
$('.boardMenuDiv .nav-link').on('click', function(){
	$('.boardMenuDiv .nav-link').removeClass('active');
	$(this).addClass('active');
});

// CSRF 토큰
csrfToken = $('#_csrfToken').val();


const offsetTime = new Date().getTimezoneOffset() * 60000;

let today = new Date(new Date().getTime() - offsetTime).toISOString().split('T')[0];
let beforeSevenDays = new Date(today);
beforeSevenDays.setDate(beforeSevenDays.getDate() - 7);
beforeSevenDays = beforeSevenDays.toISOString().split('T')[0];

document.querySelector('#boardEDate').value = today;
document.querySelector('#boardSDate').value = beforeSevenDays;
document.querySelector('#boardEDate').min = beforeSevenDays;
document.querySelector('#boardSDate').max = today;
document.querySelector('#boardEDate').max = today;


// 시작날짜를 변경하면 조건에 맞추어 종료날짜가 변경됨
$('#boardSDate').on('change', function(e){
	const boardSDate = $('#boardSDate');
	const boardEDate = $('#boardEDate');

	if(boardSDate.val() > boardEDate.val()){
		boardEDate.val(boardSDate.val());
	}
	boardEDate.attr('min', boardSDate.val());
});

// 게시판 변경
function changeBoard(targetBoard){

	$('.boardDiv').addClass('d-none');
	$('#' + targetBoard + 'BoardList').removeClass('d-none');
	$('#' + targetBoard + 'Board').removeClass('d-none');

	const boardSearchBtn = document.querySelector('#boardSearchBtn');
	const selectedBoardName = document.querySelector('#selectedBoardName');

	switch(targetBoard){
	case 'notice':
		boardSearchBtn.onclick = listNotice;
		selectedBoardName.textContent = '공지사항';
		listNotice();
		break;
	case 'inquiry':
		boardSearchBtn.onclick = listInquiry;
		selectedBoardName.textContent = '문의 게시판';
		listInquiry();
		break;
	}

}

// ---------------------------------- 공지사항 시작 ----------------------------------

// 공지사항 등록일
const noticeDate = $('#noticeDate');
// 공지사항 최종 작성자
const noticeLastWriter = $('#noticeLastWriter');
// 공지사항 최종 수정일
const noticeLastUpdateDate = $('#noticeLastUpdateDate');

//공지사항 목록 조회
listNotice();

// 기간선택 옆의 검색 버튼 클릭 시 게시판 검색 수행
$('#listBoardBtn').on('click', function(){
	$('#boardSearchBtn').click();
});

// 공지사항 목록 조회
function listNotice(){

	const keyword = document.querySelector('#boardSearch').value;
	const boardSDate = document.querySelector('#boardSDate').value;
	const boardEDate = document.querySelector('#boardEDate').value;

	const parameterData = {
			keyword : keyword,
			boardSDate : boardSDate,
			boardEDate : boardEDate
	}

	const parameterString = Object.entries(parameterData).map(e => e.join('=')).join('&');

	fetch('/hospital/board/listNotice?' + parameterString)
		.then(res => res.json())
		.then(noticeList => {

			let code = '';
			if(noticeList.length == 0){
				code += '<tr><td colspan="3">검색 결과가 존재하지 않습니다.</td></tr>';
			}else{
				noticeList.forEach(function(notice){
					code += '<tr class="noticeRow">';
					code += '<td>' + notice.noNum + '</td>';
					code += '<td>' + notice.noTitle + '</td>';
					code += '<td>' + notice.noDtStr + '</td>';
					code += '</tr>';
				});
			}

			document.querySelector('#noticeBoardListBody').innerHTML = code;
		});

}

// 공지사항 목록을 선택하면 우측 폼에 내용이 채워진다.
$(document).on('click', '.noticeRow', function(){

	const noNum = $(this).children()[0].textContent;
	fetch('/hospital/board/selectNotice?noNum=' + noNum)
		.then(res => res.json())
		.then(notice => {

			$('#noNum').val(notice.noNum);
			$('#noTitle').val(notice.noTitle);
			$('#noContent').summernote('code', notice.noContent);

			noticeDate.text(notice.noDtStr);
			noticeLastWriter.text(notice.empNm + '(' + notice.empNum + ')');
			noticeLastUpdateDate.text(notice.noUpdatedDtStr);

			document.noticeForm.action = '/hospital/board/updateNotice';

		});

});

// 공지사항 입력 폼을 초기화하고 새로운 공지사항을 등록할 준비를 한다.
function resetNoticeForm(){

	document.noticeForm.reset();
	document.noticeForm.noNum.value = '';
	document.noticeForm.action = '/hospital/board/insertNotice';
	$('#noContent').summernote('code', '');

	noticeDate.text('');
	noticeLastWriter.text('');
	noticeLastUpdateDate.text('');

}

// 공지사항 저장
function saveNotice(){

	let formData = new FormData(document.noticeForm);
	if(formData.get('noTitle') == '') {
		simpleErrorAlert('제목을 입력해주세요.');
		return false;
	}

	if(formData.get('noContent') == ''){
		simpleErrorAlert('내용을 입력해주세요.');
		return false;
	}


	if(formData.get('noNum') == '') formData.set('noNum', '0');

	const actionPath = document.noticeForm.action;
	fetch(actionPath, {
		method: 'post',
		headers: {
			'X-CSRF-TOKEN' : csrfToken
		},
		body: formData
	})
		.then(res => {
			if (!res.ok) throw new Error();
			return res.json();
		})
		.then(resultMap => {
			const result = resultMap.result;

			if(result == 'FAILED') throw new Error();

			if(result == 'INSERT'){
				simpleSuccessAlert('공지사항이 등록되었습니다.');
				document.noticeForm.action = '/hospital/board/updateNotice';
				setToday('notice');
				$('#noNum').val(resultMap.noNum);
			} else if(result == 'UPDATE'){
				simpleSuccessAlert('공지사항이 수정되었습니다.');
				setCurrentTime('notice');
			}

			noticeLastWriter.text($('#_empNm').val() + '(' + $('#_empNum').val() + ')');
			listNotice();
		})
		.catch(() => {
			simpleJustErrorAlert();
		});

}

// 공지사항 삭제 알림창
function deleteNoticeAlert(){

	const noNum = document.querySelector('#noNum').value;
	if(noNum == ''){
		simpleErrorAlert('공지사항을 선택해주세요.');
		return false;
	}

	Swal.fire({
		title: '공지사항을 삭제하시겠습니까?',
		showDenyButton: true,
		confirmButtonText: '확인',
		denyButtonText: '취소',
	}).then(result => {
		if(result.isConfirmed){
			deleteNotice();
		}
	});

}

// 공지사항 삭제
function deleteNotice(){

	const noNum = $('#noNum').val();
	fetch('/hospital/board/deleteNotice', {
		method: 'post',
		headers: {
			'X-CSRF-TOKEN' : csrfToken,
			'Content-Type' : 'application/json;charset=utf-8'
		},
		body: JSON.stringify({
			noNum : noNum
		})
	})
		.then(res => {
			if (!res.ok) throw new Error();
			return res.text();
		})
		.then(text => {
			if(text == 'FAILED') throw new Error();

			simpleSuccessAlert('공지사항이 삭제되었습니다.');
			resetNoticeForm();
			listNotice();
		})
		.catch(() => {
			simpleJustErrorAlert();
		});
}

//---------------------------------- 공지사항 끝 ----------------------------------


// ---------------------------------- 문의게시판 시작 ----------------------------------

// 답변 등록일
const answerDate = $('#answerDate');
// 답변 최종 작성자
const answerLastWriter = $('#answerLastWriter');
// 답변 최종 수정일
const answerLastUpdateDate = $('#answerLastUpdateDate');

//문의게시판 목록 조회
function listInquiry(){

	const keyword = document.querySelector('#boardSearch').value;
	const boardSDate = document.querySelector('#boardSDate').value;
	const boardEDate = document.querySelector('#boardEDate').value;

	let parameterData = {
			keyword : keyword,
			boardSDate : boardSDate,
			boardEDate : boardEDate
	}

	let parameterString = Object.entries(parameterData).map(e => e.join('=')).join('&');

	fetch('/hospital/board/listInquiry?' + parameterString)
		.then(res => {
			if(!res.ok) throw new Error();
			return res.json();
		})
		.then(inquiryList => {
			let code = '';
			if(inquiryList.length == 0){
				code += '<tr><td colspan="4">검색 결과가 존재하지 않습니다.</td></tr>';
			}else{

				inquiryList.forEach(function(inquiry){
					code += '<tr class="inquiryRow">';
					code += '<td>' + inquiry.inqNum + '</td>';
					code += '<td>' + inquiry.inqTitle + '</td>';
					code += '<td>' + inquiry.inqDtStr + '</td>';
					code += '<td>' + (inquiry.ansCount == 0 ? '미답변' : '답변완료') + '</td>';
					code += '</tr>';
				});

				document.querySelector('#inquiryBoardListBody').innerHTML = code;
			}

		})
		.catch(() => {
			simpleJustErrorAlert();
		});

}

// 문의글 목록을 선택하면 우측 폼에 내용이 채워진다.
$(document).on('click', '.inquiryRow', function(){

	const inqNum = $(this).children()[0].textContent;
	fetch('/hospital/board/selectInquiry?inqNum=' + inqNum)
		.then(res => {
			if(!res.ok) throw new Error();
			return res.json();
		})
		.then(inquiry => {

			$('#inqNum').val(inquiry.inqNum);
			$('#inqTitle').text(inquiry.inqTitle);
			$('#inqWrtrNm').text(inquiry.inqWrtrNm);
			$('#inqDtStr').text(inquiry.inqDtStr);
			$('#inqContent').html(inquiry.inqContent);

			if(inquiry.ansVO != null){
				$('#ansContent').summernote('code', inquiry.ansVO.ansContent);
				answerDate.text(inquiry.ansVO.ansDtStr);
				answerLastWriter.text(inquiry.ansVO.empNm + '(' + inquiry.ansVO.empNum + ')');
				answerLastUpdateDate.text(inquiry.ansVO.ansUpdatedDtStr);
				document.answerForm.action = '/hospital/board/updateAnswer';
			} else {
				$('#ansContent').summernote('code', '');
				answerDate.text('');
				answerLastWriter.text('');
				answerLastUpdateDate.text('');
				document.answerForm.action = '/hospital/board/insertAnswer';
			}
		})
		.catch(() => {
			simpleJustErrorAlert();
		});

});

// 답변 저장
function saveAnswer(){

	let formData = new FormData(document.answerForm);
	if(formData.get('inqNum') == '') {
		simpleErrorAlert('문의글을 선택해주세요.');
		return false;
	}

	if(formData.get('ansContent') == ''){
		simpleErrorAlert('내용을 입력해주세요.');
		return false;
	}

	const actionPath = document.answerForm.action;

	fetch(actionPath, {
		method: 'post',
		headers: {
			'X-CSRF-TOKEN' : csrfToken
		},
		body: formData
	})
		.then(res => {
			if(!res.ok) throw new Error();
			return res.text();
		})
		.then(text => {
			if(text == 'FAILED') throw new Error();

			if(text == 'INSERT'){
				simpleSuccessAlert('답변이 추가되었습니다.');
				document.answerForm.action = '/hospital/board/updateAnswer';
				setToday('answer');
			} else if(text == 'UPDATE'){
				simpleSuccessAlert('답변이 수정되었습니다.');
				setCurrentTime('answer');
			}
			answerLastWriter.text($('#_empNm').val() + '(' + $('#_empNum').val() + ')');
			listInquiry();
		})
		.catch(() => {
			simpleJustErrorAlert();
		});
}

// 문의글 - 답변 삭제 알림창
function deleteInquiryAnswerAlert(){

	const inqNum = document.querySelector('#inqNum').value;
	if(inqNum == ''){
		simpleErrorAlert('문의글을 선택해주세요.');
		return false;
	}

	Swal.fire({
		title: '문의글을 삭제하시겠습니까?',
		text: '작성된 답변도 함께 삭제됩니다.',
		showDenyButton: true,
		confirmButtonText: '확인',
		denyButtonText: '취소',
	}).then(result => {
		if(result.isConfirmed){
			deleteInquiryAnswer();
		}
	});
}

// 문의글 - 답변 삭제
function deleteInquiryAnswer(){

	const inqNum = document.querySelector('#inqNum').value;
	fetch('/hospital/board/deleteInquiryAnswer', {
		method: 'post',
		headers: {
			'X-CSRF-TOKEN' : csrfToken,
			'Content-Type' : 'application/json;charset=utf-8'
		},
		body: JSON.stringify({
			inqNum : inqNum
		})
	})
		.then(res => {
			if(!res.ok) throw new Error();
			return res.text();
		})
		.then(text => {
			if(text == 'FAILED') throw new Error();

			simpleSuccessAlert('문의글이 삭제되었습니다.');
			resetInquiryAnswer();
			listInquiry();
		})
		.catch(() => {
			simpleJustErrorAlert();
		})
}

// 문의글 - 답변 폼 초기화
function resetInquiryAnswer(){

	$('#inqNum').val('');
	$('#inqTitle').text('문의글을 선택해주세요.');
	$('#inqWrtrNm').text('');
	$('#inqDtStr').text('');
	$('#inqContent').text('');
	$('#ansContent').summernote('code', '');
	answerDate.text('');
	answerLastWriter.text('');
	answerLastUpdateDate.text('');
	document.answerForm.action = '/hospital/board/insertAnswer';

}

// 등록일 작성을 위해 오늘 날짜 가져옴
function setToday(targetBoard){

	const offset = new Date().getTimezoneOffset() * 60000;
	const nowTime = new Date(new Date().getTime() - offset).toISOString().split('T')[0];

	switch(targetBoard){
	case 'notice':
		noticeDate.text(nowTime);
		break;
	case 'answer':
		answerDate.text(nowTime);
		break;
	}

}

// 최종 수정일 작성을 위해 현재 시간 가져옴
function setCurrentTime(targetBoard){

	const offset = new Date().getTimezoneOffset() * 60000;
	const nowTime = new Date(new Date().getTime() - offset).toISOString().slice(0, 16).replace(/-/g, '.').replace('T', ' ');

	switch(targetBoard){
	case 'notice':
		noticeLastUpdateDate.text(nowTime);
		break;
	case 'answer':
		answerLastUpdateDate.text(nowTime);
		break;
	}

}

//---------------------------------- 문의게시판 끝 ----------------------------------

// 공지사항 서머노트 적용
$('#noContent').summernote({
	height: 300,
	lang: 'ko-KR'
});

// 문의글 답변 서머노트 적용
$('#ansContent').summernote({
	height: 160,
	lang: 'ko-KR'
});

</script>
<script src="/resources/js/alertModule.js"></script>