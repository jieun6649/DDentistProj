<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.web.ddentist.mapper.CommunityMapper">

	<!--  검색 -->
	<sql id="where">
	  	<if test="keyword!=null and keyword != ''">
		AND (		
				COM_TITLE LIKE '%' || #{keyword} ||'%'
		      OR COM_CONTENT LIKE '%' || #{keyword} ||'%'
		      OR B.PT_ID LIKE '%' || #{keyword} || '%'
		    )
    	</if>
	</sql>
	
	
	<!-- 커뮤니티 게시글 목록 가져오기 -->
	<select id="selectList" parameterType="hashMap" resultType="commVO" >
	  WITH U AS(
			SELECT ROW_NUMBER() OVER(ORDER BY T.COM_NUM DESC) RNUM
			       ,T.* 
			FROM 
			(
			  SELECT   A.COM_NUM, A.PT_NUM, B.PT_ID, A.COM_TITLE, A.COM_CONTENT, A.COM_DT, A.COM_INQ_CNT
			    FROM COMMUNITY A, PATIENT B
			   WHERE 1=1
			   AND A.PT_NUM = B.PT_NUM
			  <include refid="where"></include>
			) T
		)
			SELECT U.*
			FROM U
			WHERE U.RNUM BETWEEN (#{currentPage}*#{size}) - (#{size}-1) 
			                        AND (#{currentPage}*#{size})
	</select>


	<!--  커뮤니티 게시글 상세보기 -->
	<select id="detail" parameterType="commVO" resultType="commVO">
		SELECT A.COM_NUM, A.PT_NUM, B.PT_NM, B.PT_ID, A.COM_TITLE, A.COM_CONTENT, A.COM_DT, A.COM_INQ_CNT, A.COM_UPDATED_DT
		  FROM COMMUNITY A, PATIENT B
		  WHERE A.PT_NUM = B.PT_NUM
		    AND A.COM_NUM = #{comNum}
	</select>
	
	<!--  조회수 증가시키기 -->
	<update id="viewCount" parameterType="commVO">
		UPDATE COMMUNITY
		   SET COM_INQ_CNT  = COM_INQ_CNT + 1
		 WHERE COM_NUM = #{comNum}
	</update>
	
	<!-- 게시글 등록 -->
	<insert id="insertPost" parameterType="commVO">
		<selectKey resultType="int" order="BEFORE" keyProperty="comNum">
			SELECT NVL(MAX(COM_NUM),0)+1 FROM COMMUNITY
		</selectKey>
		INSERT INTO COMMUNITY(COM_NUM, PT_NUM, COM_TITLE, COM_CONTENT, COM_DT, COM_INQ_CNT, COM_UPDATED_DT)
			 VALUES( 
			         #{comNum}
			         , #{ptNum}
			         , #{comTitle}
			         , #{comContent}
			         , SYSDATE
			         , 0
			         , SYSDATE
			         )
	</insert>

	<!--  댓글 리스트 출력 -->
	<select id="getReplyList" parameterType="int" resultType="commReplyVO">
			SELECT  A.LVL, A.COM_NUM, LPAD(' ',2*(LEVEL-1))||A.REPLY_CONTENT AS REPLYCONTENT, B.PT_ID, A.PT_NUM, TO_CHAR(A.REPLY_DT, 'YYYY-MM-DD HH24:MI') AS REPLY_DT, A.REPLY_NUM, A.TARGET_REPLY_NUM
			  FROM COMMUNITY_REPLY A, PATIENT B
			 WHERE A.PT_NUM = B.PT_NUM
               AND A.COM_NUM = #{comNum}
		START WITH TARGET_REPLY_NUM = 0
  CONNECT BY PRIOR REPLY_NUM = TARGET_REPLY_NUM
			ORDER SIBLINGS BY TARGET_REPLY_NUM ASC, REPLY_NUM DESC
	</select>


	<!--  게시글 수정 -->
	<update id="updatePost" parameterType="commVO">
		UPDATE COMMUNITY
		   SET COM_TITLE = #{comTitle}, COM_CONTENT = #{comContent} 
		 WHERE COM_NUM = #{comNum}
	</update>
	
	
	<!-- 전체 행의 수 구하기 -->
	<select id="getTotal" parameterType="String" resultType="int">
		SELECT COUNT(DISTINCT(COM_NUM))
		  FROM COMMUNITY A, PATIENT B
		WHERE 1=1
		 AND A.PT_NUM = B.PT_NUM
		<include refid="where"></include>
	</select>
	
	<!-- 게시글 삭제 -->
	<delete id="deletePost" parameterType="int">
		DELETE FROM COMMUNITY WHERE COM_NUM = #{comNum}
	</delete>
	
	<!-- 댓글 등록 -->
	<insert id="insertReply" parameterType="commReplyVO">
		<selectKey resultType="int" order="BEFORE" keyProperty="replyNum">
			SELECT NVL(MAX(REPLY_NUM),0)+1 FROM COMMUNITY_REPLY
		</selectKey>
	
		INSERT INTO COMMUNITY_REPLY(
									REPLY_NUM
									, COM_NUM
									, PT_NUM
									, REPLY_DT
									, LVL
									, REPLY_CONTENT
									)
			 VALUES(   #{replyNum}
			 	       , #{comNum}
			 	       , #{ptNum}
			 	       , SYSDATE
			 	       , #{lvl}
			 	       , #{replyContent}
			 	      )
	</insert>
	
	<!-- 대댓글 등록 -->
	<insert id="insertReReply" parameterType="commReplyVO">
		<selectKey resultType="int" order="BEFORE" keyProperty="replyNum">
			 SELECT NVL(MAX(REPLY_NUM),0)+1 FROM COMMUNITY_REPLY
		</selectKey>
	
		INSERT INTO COMMUNITY_REPLY(
									REPLY_NUM
									, COM_NUM
									, PT_NUM
									, REPLY_DT
									, TARGET_REPLY_NUM
									, LVL
									, REPLY_CONTENT
									)
							VALUES( 
									  #{replyNum}
									, #{comNum}
									,  #{ptNum}
									, SYSDATE
									, #{targetReplyNum}
									, #{lvl}
									, #{replyContent}
								  )
	</insert>
	
	<!--  댓글 삭제 -->
	<delete id="deleteReply" parameterType="commReplyVO">
		DELETE FROM COMMUNITY_REPLY
		      WHERE REPLY_NUM = #{replyNum}
		        AND COM_NUM = #{comNum} 
		        AND PT_NUM = #{ptNum}
	</delete>
	
	<!-- 직원페이지 : 커뮤니티 게시글 조회 (날짜검색, 키워드 검색) -->
	<select id="listReview" parameterType="hashMap" resultType="commVO">
		SELECT A.COM_NUM, A.PT_NUM, B.PT_ID, A.COM_TITLE, A.COM_CONTENT, TO_CHAR(A.COM_DT, 'YYYY.MM.DD') AS COM_DT_STR, COM_INQ_CNT,  TO_CHAR(A.COM_UPDATED_DT, 'YYYY.MM.DD') AS UPDATE_DT_STR
		  FROM COMMUNITY A, PATIENT B
		WHERE 1=1 
		  AND A.PT_NUM = B.PT_NUM
		<if test="boardSDate != null and boardSDate != ''">
		<![CDATA[
			AND A.COM_DT >= TO_DATE(#{boardSDate}, 'YYYY-MM-DD')
		]]>
		</if>
		<if test="boardEDate != null and boardEDate != ''">
		<![CDATA[
			AND A.COM_DT <= TO_DATE(#{boardEDate}, 'YYYY-MM-DD') + 1
		]]>
		</if>
		<if test="keyword != null and keyword != ''">
		    AND 
		    (
		        A.COM_TITLE LIKE '%' ||  #{keyword} || '%'
				OR A.COM_CONTENT LIKE '%' ||  #{keyword} || '%'
				OR B.PT_ID LIKE '%' || #{keyword} || '%'
		    )
		</if>           
		ORDER BY COM_NUM DESC        
	</select>
</mapper>