<%@ page language="java" contentType="text/html; charset=UTF-8" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
<style>
.violetBtn {
	background-color: #904aff !important;
	border: none;
	font-family: 'Noto Sans KR', sans-serif;
	font-weight: 500;
	color: white;
}
.page-item, .empTr{
	cursor: pointer;
}
.selectedRow{
	background-color: #657D96 !important;
}
</style>
<div class="content-wrapper" style="background-color: #657D96;">
	<!-- main 검색창을 포함한 navbar 시작-->
	<nav class="navbar navbar-expand navbar-white navbar-light" style="background-color: #404b57;">
		<div class="input-group" style="width: 400px;">
			<input type="search" class="form-control" id="ptSearch" placeholder="환자 검색">
			<div class="input-group-append">
				<button type="button" id="ptSearchBtn" class="btn btn-outline-light" onclick="searchRcvmtHistList();">검색</button>
			</div>
		</div>
		<ul class="navbar-nav ml-auto"></ul>
		<div class="statisticsMenu">
			<ul class="navbar-nav mb-0">
				<li class="nav-item">
					<a href="#" class="nav-link text-white py-0" onclick="">실적 통계</a>
				</li>
				<li class="nav-item">
					<a href="#" class="nav-link text-white py-0" onclick="">수익 통계</a>
				</li>
			</ul>
		</div>
	</nav>

	<section class="content" style="margin-top: 1%;">
		<div style="height: 900px;">
			<div class="row mb-3" style="height: 100%;">
				<div class="col-md-5">
					<div class="card card-info" style="height: 100%;">
						<div class="card-header" style="background-color: #404b57;">
							<div class="card-title">
								<h5 class="m-0">직원목록</h5>
							</div>
						</div>
						<div class="pt-4 px-4">
							<form id="empSearchForm" name="empSearchForm" onsubmit="return false;">
								<div class="form-group">
									<label>직원 검색</label>
									<select id="hdofYn" name="hdofYn" class="form-control">
										<option value="">전체</option>
										<c:forEach var="hdofYn" items="${requestScope.hdofYnList}">
											<option value="${hdofYn.commCdNm}">${hdofYn.commCdCnt}</option>
										</c:forEach>
									</select>
								</div>
								<div class="row">
									<div class="col-md-6">
										<div class="form-group">
											<label for="jbgdCd">직급</label>
											<select id="jbgdCd" name="jbgdCd" class="form-control">
												<option value="">전체</option>
												<c:forEach var="jbgd" items="${requestScope.jbgdList}">
													<option value="${jbgd.jbgdCd}">${jbgd.jbgdNm}</option>
												</c:forEach>
											</select>
										</div>
									</div>
									<div class="col-md-6">
										<div class="form-group">
											<label for="deptCd">부서</label>
											<select id="deptCd" name="deptCd" class="form-control">
												<option value="">전체</option>
												<c:forEach var="dept" items="${requestScope.deptList}">
													<option value="${dept.deptCd}">${dept.deptNm}</option>
												</c:forEach>
											</select>
										</div>
									</div>
								</div>
								<div class="form-group">
									<label for="keyword">이름/사번</label>
									<div class="row">
										<div class="col-sm-7">
											<input type="text" id="keyword" name="keyword" class="form-control" />
										</div>
										<div class="col-sm-3">
											<button type="button" class="btn btn-success btn-block violetBtn"
												    style="border-radius: 5px;" onclick="searchEmp();">검색</button>
										</div>
									</div>
								</div>
							</form>
						</div>
						<hr />
						<div class="card-body">
							<table class="table table-bordered text-center table-hover">
								<thead>
									<tr>
										<th style="width: 26%;">사번</th>
										<th style="width: 22%;">이름</th>
										<th style="width: 28%;">부서</th>
										<th style="width: 24%;">직급</th>
									</tr>
								</thead>
								<tbody id="empSearchListBody"></tbody>
							</table>
							<div class="mt-3 d-flex justify-content-center align-items-center">
								<nav>
									<ul id="empSearchListPagination" class="pagination"></ul>
								</nav>
							</div>
						</div>
					</div>
				</div>
				<div class="col-md-7">
					<div class="card card-info" style="height: 100%;">
						<div class="card-header" style="background-color: #404b57;">
							<div class="card-title">
								<h5 class="m-0">진료실적</h5>
							</div>
						</div>
						<div class="card-body">
							<div class="h-50 p-4">
								<canvas id="ptCountChartCanvas"></canvas>
							</div>
							<div class="h-50 p-4">
								<canvas id="revenueChartCanvas"></canvas>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
const empSearchForm = document.querySelector('#empSearchForm');
const keyword = document.querySelector('#keyword');
const empSearchBtn = document.querySelector('#empSearchBtn');
const empSearchListBody = document.querySelector('#empSearchListBody');
const empSearchListPagination = document.querySelector('#empSearchListPagination');
const ptCountChartCanvas = document.querySelector('#ptCountChartCanvas');
const revenueChartCanvas = document.querySelector('#revenueChartCanvas');

// 직원 목록 초기화
searchEmp(1);

var ptCountChart = initPtCountChart();
var revenueChart = initRevenueChart();

// 직원 검색 입력칸에서 엔터 클릭 시 검색
$(keyword).on('keydown', function (e){
	if(e.keyCode == 13) searchEmp();
});

// 페이징 버튼 클릭 시 페이지 이동
$(document).on('click', '.page-link', function(){
	searchEmp($(this).data('page'));
});

// 직원 목록의 행 선택 시 통계 그래프 출력
$(document).on('click', '.empTr', function(){
	$('.empTr').removeClass('selectedRow');
	$(this).addClass('selectedRow');
	selectMonthlyPtCount($(this).children()[0].textContent);
});

// 직원 검색
function searchEmp(page){
	
	let formData = new FormData(empSearchForm);
	if(page == undefined) page = 1;
	formData.append('page', page);
	let parameterString = [...formData.entries()].map(e => e.join('=')).join('&');
	
	fetch('/hospital/manage/statistics/listEmp?' + parameterString)
		.then(res => {
			if(!res.ok) throw new Error();
			return res.json();
		})
		.then(pageInfo => {
			
			let code = '';
			pageInfo.content.forEach(function(emp){
				code += '<tr class="empTr">';
				code += '<td>' + emp.empNum + '</td>';
				code += '<td>' + emp.empNm + '</td>';
				code += '<td>' + emp.deptCd + '</td>';
				code += '<td>' + emp.jbgdCd + '</td>';
				code += '</tr>';
			});
			
			empSearchListBody.innerHTML = code;
			
			
			let pagination = '';
			if(pageInfo.startPage > 1){
				pagination += '<li class="page-item">';
				pagination += '<a class="page-link" href="javascript:void(0);" data-page="' + (pageInfo.startPage - 1) + '">&laquo;</a>';
				pagination += '</li>';
			}
			for(let i = pageInfo.startPage; i <= pageInfo.endPage; i++){
				pagination += '<li class="page-item';
				if(pageInfo.currentPage == i){
					pagination += ' active';
				}
				pagination += '"">';
				pagination += '<a class="page-link href="javascript:void();" data-page="' + i + '">' + i + '</a>';
				pagination += '</li>';
			}
			if(pageInfo.endPage < pageInfo.totalPages){
				pagination += '<li class="page-item">';
				pagination += '<a class="page-link" href="javascript:void();" data-page="' + (pageInfo.endPage + 1) + '">&raquo;</a>';
				pagination += '</li>';
			}
			
			empSearchListPagination.innerHTML = pagination;
			
		})
		.catch(() => {
			simpleJustErrorAlert();
		})
}

// data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
// labels: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월']
// ticks: {
// 	callback: function(value, index, ticks){
// 		return value + '명';
// 	}
// }
// tooltip: {
// 	callbacks: {
// 		label: function(context){
// 			context.formattedValue = context.formattedValue + '명';
// 		}
// 	}
// }


// let monthlyChart = new Chart(chartCanvas, {
// 		type: 'bar',
// 		data: {
// 			labels: chartData.labels,
// 			datasets: [
// 			{
// 				label: '진료 환자 수',
// 				data: chartData.data,
// 				backgroundColor: 'rgba(54, 162, 235, 0.2)',
// 				borderColor: 'rgb(54, 162, 235)',
// 				borderWidth: 1
// 			}]
// 		},
// 		options: {
// 			scales: {
// 				y: {
// 					ticks: chartData.ticks,
// 					position: 'left'
// 				}
// 			},
// 			plugins: {
// 				tooltip: chartData.tooltip
// 			}
// 		}
		
// 	});

// 차트 그래프 초기화
function initPtCountChart(){
	
	let ptCountChart = new Chart(ptCountChartCanvas, {
		type: 'bar',
		data: {
			datasets: [
			{
				label: '진료 환자 수',
				backgroundColor: 'rgba(54, 162, 235, 0.2)',
				borderColor: 'rgb(54, 162, 235)',
				borderWidth: 1
			}]
		},
		options: {
			scales: {
				y: {
					suggestedMax: 10
				}
			}
		}
	});
	
	return ptCountChart;
}

function initRevenueChart(){
	
	let revenueChart = new Chart(revenueChartCanvas, {
		type: 'bar',
		data: {
			datasets: [
			{
				label: '진료 수익',
				backgroundColor: 'rgba(75, 192, 192, 0.2)',
				borderColor: 'rgb(75, 192, 192)',
				borderWidth: 1
			}]
		},
		options: {
			scales: {
				y: {
					suggestedMax: 1000000
				}
			}
		}
	});
	
	return revenueChart;
}

// 차트 그래프 데이터 업데이트
function updatePtCountChart(chartData){
	ptCountChart.data.labels = chartData.labels;
	ptCountChart.data.datasets[0].data = chartData.data;
	ptCountChart.options.scales.y.ticks = chartData.ticks;
	ptCountChart.options.plugins.tooltip = chartData.tooltip;
	ptCountChart.update();
}

// 선택한 의사의 월별 진료 환자 수
function selectMonthlyPtCount(empNum){
	
	fetch('/hospital/manage/statistics/selectMonthlyPtCount?empNum=' + empNum)
		.then(res => {
			if(!res.ok) throw new Error();
			return res.json();
		})
		.then(monthlyPt => {
			
			let chartData = {
					data: monthlyPt,
					labels: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
					ticks: {
					 	callback: function(value, index, ticks){
					 		return value + '명';
					 	}
					},
					tooltip: {
					 	callbacks: {
					 		label: function(context){
					 			context.formattedValue = context.formattedValue + '명';
					 		}
					 	}
					}
			}
			
			updatePtCountChart(chartData);
			
		})
		.catch(err => {
			console.log(err);
			simpleJustErrorAlert();
		})
	
}

</script>
<script src="/resources/js/alertModule.js"></script>