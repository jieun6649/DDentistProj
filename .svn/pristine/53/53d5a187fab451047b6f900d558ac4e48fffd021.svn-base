var draggedEventIsAllDay;
var activeInactiveWeekends = true;

var calendar = ({

 /** ******************
   *  OPTIONS
   * *******************/
  locale                    : 'ko',    
  timezone                  : "local", 
  nextDayThreshold          : "09:00:00",
  allDaySlot                : false,			// 종일 목록
  displayEventTime          : true,				// 이벤트 시작 시간 출력
  displayEventEnd           : true,				// 이벤트 종료 시간 출력
  firstDay                  : 0, 				//월요일이 먼저 오게 하려면 1
  weekNumbers               : false,			//주 숫자
  selectable                : true,				// 테이블 선택 가능
  weekNumberCalculation     : "ISO",
  eventLimit                : true,	// ??? 이벤트 제한 설정?
  views                     : { 
                                month : { eventLimit : 1 }, // 한 날짜에 최대 이벤트 12개, 나머지는 + 처리됨
                                day : { eventLimit : 1}
                              },
  eventLimitClick           : 'popover',		//'week', //popover,
  //dayClick 					: true,			// 안됨..
  navLinks                  : true,				// NavLink 는 Link 랑 비슷한데, 만약 현재 경로와 Link 에서 사용하는 경로가 일치하는 경우 특정 스타일 혹은 클래스를 적용 할 수 있는 컴포넌트입니다.??
  defaultDate               : new Date(),		// moment('2023-02'), //실제 사용시 현재 날짜로 수정 // new Date() : 오늘 날짜
  timeFormat                : 'HH:mm',			
  defaultTimedEventDuration : '01:00:00',		// 시간 간격
  editable                  : false,			// 테이블 이벤트 끄기?? 드로그 앤 드롭 막힘
  minTime                   : '7:00:00',		// 최소 시간(오픈시간)
  maxTime                   : '22:00:00',		// 최대 시간(마감시간)
  slotLabelFormat           : 'HH:mm',
  weekends                  : true,				// 주말 출력 유무
  nowIndicator              : true,				// 오늘 날짜 표현
  dayPopoverFormat          : 'MM/DD dddd',		
  longPressDelay            : 0,
  eventLongPressDelay       : 0,
  selectLongPressDelay      : 0,
  //eventOverlap				: function(stillEvent, movingEvent) {debugger; return false;} ,
  
  // custom 시작
  contentHeight				: 720,
  handleWindowResize		: true,
  aspectRatio				: 10,	// 종횡비
  
  // custom 끝
  
  header                    : {
                                left   : 'today, prevYear, nextYear, viewWeekends',
                                center : 'prev, title, next',
                                right  : 'month, agendaWeek, agendaDay, listWeek' 
                              },
  views                     : {
                                month : {
                                  columnFormat : 'dddd',
                                },
                                agendaWeek : {
                                  columnFormat : 'M/D ddd',
                                  titleFormat  : 'YYYY년 M월 D일',
                                  eventLimit   : false
                                },
                                agendaDay : {
                                  columnFormat : 'dddd',
                                  eventLimit   : false
                                },
                                listWeek : {
                                  columnFormat : ''
                                }
                              },
  customButtons             : { //주말 숨기기 & 보이기 버튼
                                viewWeekends : {
                                  text  : '주말',
                                  click : function () {
                                    activeInactiveWeekends ? activeInactiveWeekends = false : activeInactiveWeekends = true;
                                    $('.calendar').fullCalendar('option', { 
                                      weekends: activeInactiveWeekends
                                    });
                                  }
                                }
                               },

  eventRender: function (event, element, view) {
	// 호소 증상 미기입 시 공백
	if(event.description == null || event.description == '') {
		var edp = '미기입';
	  }
	  else {
	  	var edp = event.description;
	  }
	
	if(event.statNm=='예약미이행'){
	    //일정에 hover시 요약
	    element.popover({
	      title: $('<div />', {
	        class: 'popoverTitleCalendar',
	        text: '의사 : ' + event.empName
	      }).css({
	        'background': event.backgroundColor,
	        'color': '#ffffff'		//event.textColor
	      }),
	      content: $('<div />', {
	          class: 'popoverInfoCalendar'
	        }).append('<p><strong>환자:</strong> ' + event.title + '</p>')
	        .append('<p><strong>전화번호:</strong> ' + event.phone + '</p>')
	        .append('<p style="text-decoration-line:underline overline line-through"><strong>시간:</strong> ' + getDisplayEventDate(event) + '</p>')
	        .append('<p><strong>예약 현황:</strong> ' + event.statNm + '</p>')
	        .append('<div class="popoverDescCalendar"><strong>호소증상(C.C):</strong> ' + edp + '</div>'),
	      delay: {
	        show: "800",
	        hide: "50"
	      },
	      trigger: 'hover',
	      placement: 'bottom',
	      html: true,
	      container: 'body'
	    });
    } else {
	    element.popover({
	      title: $('<div />', {
	        class: 'popoverTitleCalendar',
	        text: event.empName
	      }).css({
	        'background': event.backgroundColor,
	        'color': '#ffffff'		//event.textColor
	      }),
	      content: $('<div />', {
	          class: 'popoverInfoCalendar'
	        }).append('<p><strong>환자:</strong> ' + event.title + '</p>')
	        .append('<p><strong>전화번호:</strong> ' + event.phone + '</p>')
	        .append('<p><strong>시간:</strong> ' + getDisplayEventDate(event) + '</p>')
	        .append('<p><strong>예약 현황:</strong> ' + event.statNm + '</p>')
	        .append('<div class="popoverDescCalendar"><strong>호소증상(C.C):</strong> ' + edp + '</div>'),
	      delay: {
	        show: "800",
	        hide: "50"
	      },
	      trigger: 'hover',
	      placement: 'bottom',
	      html: true,
	      container: 'body'
	    });
	}
	
    return filtering(event);
  },

  /* ****************
   *  일정 받아옴 
   * ************** */
  events: function (start, end, timezone, callback) {
    $.ajax({
      type: "get",
      url: "/hospital/resv/list",
      data: {
        // 화면이 바뀌면 Date 객체인 start, end 가 들어옴
        startDate : moment(start).format('YYYY-MM-DD'),
        endDate   : moment(end).format('YYYY-MM-DD')
      },
      dataType: "json",
      success: function (response) {
      	//예약 리스트 목록
      	//console.log(JSON.stringify(response));
      	
      	// 이틀 이상인 달력이 아니면 사용할 필요 없음
        var fixedDate = response.map(function (array) {
          if (array.allDay && array.start !== array.end) {
          array.end = moment(array.end).add(1, 'days'); // 이틀 이상 AllDay 일정인 경우 달력에 표기시 하루를 더해야 정상출력
          }
          return array;
        });
        
        callback(response);
      },
      error : function(err){
      	simpleJustErrorAlert(err.status);
      }
    });
  },

  eventAfterAllRender: function (view) {
    if (view.name == "month") $(".fc-content").css('height', 'auto');
  },

  //일정 리사이즈
  eventResize: function (event, delta, revertFunc, jsEvent, ui, view) {
    $('.popover.fade.top').remove();
  
    /** 리사이즈시 수정된 날짜반영
     * 하루를 빼야 정상적으로 반영됨. */
	
    var newDates = calDateWhenResize(event);

    //리사이즈한 일정 업데이트
    $.ajax({
      type: "get",
      url: "",
      data: {
        //id: event._id,
        //....
      },
      success: function (response) {
        alert('수정: ' + newDates.startDate + ' ~ ' + newDates.endDate);
      }
    });

  },
  
	
  eventDragStart: function (event, jsEvent, ui, view) {
    draggedEventIsAllDay = event.allDay;
  },

  //일정 드래그앤드롭
  
  eventDrop: function (event, delta, revertFunc, jsEvent, ui, view) {
    $('.popover.fade.top').remove();

    //주,일 view일때 종일 <-> 시간 변경불가
    if (view.type === 'agendaWeek' || view.type === 'agendaDay') {
      if (draggedEventIsAllDay !== event.allDay) {
        alert('드래그앤드롭으로 종일<->시간 변경은 불가합니다.');
        location.reload();
        return false;
      }
    }

    // 드랍시 수정된 날짜반영
    var newDates = calDateWhenDragnDrop(event);

    //드롭한 일정 업데이트
    $.ajax({
      type: "get",
      url: "",
      data: {
        //...
      },
      success: function (response) {
        alert('수정: ' + newDates.startDate + ' ~ ' + newDates.endDate);
      }
    });

  },

  select: function (startDate, endDate, jsEvent, view) {
    
    if(this.id != 'close'){
    	let today = moment();
		  if (view.name == "month") {
		    startDate.set({
		      hours: today.hours(),
		      minute: today.minutes()
		    });
		    startDate = moment(startDate).format('YYYY-MM-DD HH:mm');
		    endDate = moment(endDate).subtract(1, 'days');
		
		    endDate.set({
		      hours: today.hours() + 1,
		      minute: today.minutes()
		    });
		    endDate = moment(endDate).format('YYYY-MM-DD HH:mm');
		  } else {
		    startDate = moment(startDate).format('YYYY-MM-DD HH:mm');
		    endDate = moment(endDate).format('YYYY-MM-DD HH:mm');
		  }
    	
    	//newEvent(startDate, endDate, $(this).html());
    }
    
    $('.new_reservtaion').on('click', function(){
  		newEvent(startDate, endDate, $(this).html())
	});
  },
  
  
  
  //이벤트 클릭시 수정이벤트
  eventClick: function (event, jsEvent, view) {
	editEvent(event);
  }
  
});

function getDisplayEventDate(event) {

  var displayEventDate;

  if (event.allDay == false) {
    var startTimeEventInfo = moment(event.start).format('HH:mm');
    var endTimeEventInfo = moment(event.end).format('HH:mm');
    displayEventDate = startTimeEventInfo + " - " + endTimeEventInfo;
  } else {
    displayEventDate = "하루종일";
  }

  return displayEventDate;
}

function filtering(event) {
  var show_username = true;
  var show_type = true;

  var username = $('input:checkbox.filter:checked').map(function () {
    //console.log($(this).val());
    return $(this).val();
  }).get();
  var types = $('#type_filter').val();
	
  show_username = username.indexOf(event.username) >= 0;

  if (types && types.length > 0) {
    if (types[0] == "all") {
      show_type = true;
    } else {
      show_type = types.indexOf(event.type) >= 0;
    }
  }

  return show_username && show_type;
}

function calDateWhenResize(event) {

  var newDates = {
    startDate: '',
    endDate: ''
  };

  if (event.allDay) {
    newDates.startDate = moment(event.start._d).format('YYYY-MM-DD');
    newDates.endDate = moment(event.end._d).subtract(1, 'days').format('YYYY-MM-DD');
  } else {
    newDates.startDate = moment(event.start._d).format('YYYY-MM-DD HH:mm');
    newDates.endDate = moment(event.end._d).format('YYYY-MM-DD HH:mm');
  }

  return newDates;
}


function calDateWhenDragnDrop(event) {
  // 드랍시 수정된 날짜반영
  var newDates = {
    startDate: '',
    endDate: ''
  }

  // 날짜 & 시간이 모두 같은 경우
  if(!event.end) {
    event.end = event.start;
  }

  //하루짜리 all day
  if (event.allDay && event.end === event.start) {
    console.log('1111')
    newDates.startDate = moment(event.start._d).format('YYYY-MM-DD');
    newDates.endDate = newDates.startDate;
  }

  //2일이상 all day
  else if (event.allDay && event.end !== null) {
    newDates.startDate = moment(event.start._d).format('YYYY-MM-DD');
    newDates.endDate = moment(event.end._d).subtract(1, 'days').format('YYYY-MM-DD');
  }

  //all day가 아님
  else if (!event.allDay) {
    newDates.startDate = moment(event.start._d).format('YYYY-MM-DD HH:mm');
    newDates.endDate = moment(event.end._d).format('YYYY-MM-DD HH:mm');
  }

  return newDates;
}

// 현재 날짜보다 이전 날짜의 데이터들중 
// 상태가 예약 이행, 예약 취소가 아닌 항목은 예약 미이행으로 상태 변경
$(document).ready(function(){
	// test
	$.ajax({
		url:'/hospital/resv/previousRes',
		type:'get',
		dataType:'json',
		success:function(res){
			console.log('미이행 예약 : ' + res);
		},
		error:function(err){
			simpleJustErrorAlert(err.status);
		}
	});
})



$('.calendar').fullCalendar(calendar);
