package com.web.ddentist.patient.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.web.ddentist.patient.service.IPatientService;
import com.web.ddentist.vo.PatientVO;

@Controller
@RequestMapping("/ddit")
public class PatientController {
	
	@Autowired
	private IPatientService patientService;
	
	@GetMapping("/login")
	public String login() {
		return "patient/login";
	}
	
	@ResponseBody
	@PostMapping("/sendAuthNum")
	public String sendAuthNum(@RequestBody PatientVO ptVO) {
		return patientService.sendAuthNum(ptVO);
	}
	
	@ResponseBody
	@PostMapping("/checkAuthNum")
	public String checkAuthNum(@RequestBody Map<String, String> paramMap) {
		return patientService.checkAuthNum(paramMap);
	}
	
	@PostMapping("/signup")
	public String updatePtMrsaYn(@ModelAttribute PatientVO ptVO, Model model) {
		int result = patientService.updatePtMrsaYn(ptVO);
		if(result == 0) {
			model.addAttribute("msg", "잠시 후 다시 시도해주세요.");
			model.addAttribute("loc", "/ddit/login");
			return "patient/alert";
		}
		String ptNum = ptVO.getPtNum();
		model.addAttribute("ptNum", ptNum);
		return "patient/signup";
	}
	
	@ResponseBody
	@GetMapping("/checkId")
	public String checkId(@RequestParam String ptId) {
		return patientService.checkId(ptId);
	}
	
	@PostMapping("/insertPtAcc")
	public String insertPtAcc(@ModelAttribute PatientVO ptVO, Model model) {
		int result = patientService.insertPtAcc(ptVO);
		if(result == 0) {
			model.addAttribute("msg", "잠시 후 다시 시도해주세요.");
		} else if(result == 1) {
			model.addAttribute("msg", "회원가입이 완료되었습니다.");
		}
		model.addAttribute("loc", "/ddit/login");
		return "patient/alert";
	}
	
	@GetMapping("/findId")
	public String findId() {
		return "patient/findId";
	}
	
	@GetMapping("/findPw")
	public String findPw() {
		return "patient/findPw";
	}
	
	@ResponseBody
	@PostMapping("/sendFindIdPwAuthNum")
	public String sendFindIdPwAuthNum(@RequestBody PatientVO ptVO) {
		return patientService.sendFindIdPwAuthNum(ptVO);
	}
	
	@PostMapping("/findId")
	public String findId(@RequestParam Map<String, String> paramMap, Model model) {
		String ptId = patientService.findId(paramMap);
		if(ptId == null) {
			model.addAttribute("msg", "일치하는 환자 정보가 없습니다.");
			model.addAttribute("loc", "/ddit/findId");
			return "patient/alert";
		}
		model.addAttribute("ptId", ptId);
		return "patient/findIdResult";
	}
	
	@PostMapping("/findPw")
	public String findPw(@RequestParam Map<String, String> paramMap, Model model) {
		int result = patientService.findPw(paramMap);
		if(result == 0) {
			model.addAttribute("msg", "일치하는 환자 정보가 없습니다.");
			model.addAttribute("loc", "/ddit/findPw");
			return "patient/alert";
		}
		return "patient/findPwResult";
	}
	
	@PostMapping("/resetPtPw")
	public String resetPtPw(@ModelAttribute PatientVO ptVO, Model model) {
		int result = patientService.resetPtPw(ptVO);
		if(result == 0) {
			model.addAttribute("msg", "잠시 후 다시 시도해주세요.");
			model.addAttribute("loc", "/ddit/findPw");
		} else if (result == 1) {
			model.addAttribute("msg", "비밀번호가 변경되었습니다.");
			model.addAttribute("loc", "/ddit/login");
		}
		return "patient/alert";
	}
	
}
