//--------------------------------- 시간 달력 생성 끝----------------------------------------	
var calendarDay = document.getElementById('calendarDay');
if(calendarDay != null){
	var dCalendar = new FullCalendar.Calendar(calendarDay, {
		locale				: 'ko',				// 한글 설정
		timeZone			: 'local',			// 시간 설정
		initialView			: 'timeGridDay',	// 일자 달력 표시  , 'dayGridWeek', 'timeGridDay', 'listWeek'
		allDaySlot			: false,			// 상단에 AllDay 출력여부
		nowIndicator		: true,				// 현재 시간 줄 표시
		eventMinHeight		: '100px',			// 이벤트 최소 높이 설정	default : 15
		//eventShortHeight	: '40px',			// 길이가 짧은 이벤트가 있을 경우, 높이 조절 default : 30
	    //businessHours		: true,				// 비즈니스 시간(토요일 일요일 배경색 회색으로 변함) default 09:00 ~ 17:00
		slotEventOverlap	: false,			// 이벤트 겹침 여부 , default : true
		hiddenDays			: [],				// 달력 보기에 주말을 포함할 지 여부를 설정 default : [] (월 : 1, 일 : 0, 금 : 5)
		dayHeaders			: true,				// headr에 월 표시 여부 default : true
		height				: '800px',			// 높이 크기 조절
		slotMinTime			: '07:00:00',		// 슬롯 최소 시간 default : '00:00:00'
		slotMaxTime			: '22:00:00',		// 슬롯 최대 시간 default : '24:00:00'
		scrollTime			: '08:00:00',		// 날짜 변경시 보여지는 시간 설정	 default : 06:00:00 (오전 6시)
		scrollTimeReset		: true,				// 날짜 변경시 시간 초기화(scrollTime 시간으로 초기화) default : true
		slotDuration		: '00:15:00',		// 슬롯의 시간 설정 default : '00:30:00'
		slotLabelInterval	: '00:30',			// {hours:1} : "01:00"
	  	selectable			: true,				// 테이블 선택 가능
		selectMirror		: true,				// 테이블 선택 영역 이벤트 발생
		slotLabelFormat 	: 					// 라벨의 보여지는 시간 설정
			{					
			  	hour		: '2-digit',
			  	minute		: '2-digit',
			  	omitZeroMinute: false,
			  	meridiem	: 'long'
			},
		customButtons		: 					// 사용자 커스텀 버튼 추가
			{					
			    addEvent : {
			      	text : '예약',
			      	click : function() {
			      		newEvent();
		      		},		
		   		}
	  		},
	  	select: function(arg) {
	    	console.log(arg);
	        var title = prompt('입력할 일정:');
	    	// title 값이 있을때, 화면에 calendar.addEvent() json형식으로 일정을 추가
	        if (title) {
	          	calendar.addEvent({
		            title	: title,
		            start	: arg.start,
		            end		: arg.end,
		            allDay	: arg.allDay,
		            backgroundColor:"yellow",
		            textColor:"blue"
	          	});
	        }
	    	calendar.unselect();
	    },
		headerToolbar 		: 
		{					// 캘린더 위 header 지정
			start	: 'prev,today', 
			center	: 'title',
		 	end		: 'addEvent,next' 
		},
		buttonText 			:					// header버튼 이름 지정
		{
			today	: '오늘',
			month	: 'month',
			week	: 'week',
			day		: 'day',
			list	: 'list'
		},
		buttonIcons			:
		{
		  	prev: 'chevron-left',
		  	next: 'chevron-right'
		},
		eventTimeFormat 	:
		{
			hour	: '2-digit',
		    minute	: '2-digit',
		    second	: '2-digit',
		    hour12	: false
		},
		viewHint: function(buttonText, buttonName) {// ??
		    if (buttonName.match(/^dayGrid/)) { // matches "dayGridWeek"
		      return buttonText + " list view" // results in "week list view"
		    } else {
		      return buttonText + " view" // results in "week view"
		    }
		},
		/* ****************
	   	*  예약 현황 불러오기       *
	   	* ************** */
	    eventSources: [
	        {
	          url: '/hospital/resv/list',
	          method: 'get',
	          failure: function() {
	            	simpleJustErrorAlert('이벤트 로딩 오류!!!...다시 시도해주세요');
	          }
		    }
	      ],
	 	eventClick: function(info) {
	 		eventDetailInfo(info);
	  	}
	});
}

// --------------------------------- 시간 달력 생성 끝----------------------------------------

// --------------------------------- 월 달력 생성 시작----------------------------------------
var calendarMonth = document.getElementById('calendarMonth');
if(calendarMonth != null){
	var mCalendar = new FullCalendar.Calendar(calendarMonth , {
		nowIndicator		: true,
	    initialView			: 'dayGridMonth',
	    locale				: "ko",
	  	height 				: '800px',
	    dayMaxEventRows		: true, 			// 이벤트 + more 표시 여부
	    businessHours		: false,				// 비즈니스 시간(토요일 일요일 배경색 회색으로 변함)
	    //navLinks			: true,				// can click day/week names to navigate views
	    dayMaxEvents		: true, 			// allow "more" link when too many events
	    //views	: {
	    //  timeGrid: {
	    //   	dayMaxEventRows: 6 				// 이벤트 개수 제한
	    //	}
	    //},
		dayPopoverFormat : {					// 이벤트 popover 시 제목의 날짜 형식 지정 default : { month: 'long', day: 'numeric', year: 'numeric' }
			month: 'long', 
			day: 'numeric', 
			year: 'numeric' 
		}, 
	 	headerToolbar: {
	    	left: 'prev',
	      	center: 'title',
	      	right: 'next'
	    },
	    eventSources: [
	    	{
	        	url: '/hospital/resv/list',
	        	method: 'get',
	        	failure: function() {
	            	alert('there was an error while fetching events!');
	          	},
	        }
	    ],
	    eventClick: function(info) {
	    	eventDetailInfo(info);
	  	}
	});
}
// --------------------------------- 월 달력 생성 끝----------------------------------------

function getOpenTime(){
	$.ajax({
		url: "/hospital/resv/businessHours",
		type: "get",
		dataType: "json",
		success: function(res){
			console.log("resres : " + JSON.stringify(res));
			return res;
		},
		error : function(err){
			console.log(err.status);
		}
	});
	data = {
		startTime :openTime,
		endTime :closeTime
	}
	//return res;
}





function eventDetailInfo(info){
	var element = $(info.el); // 이벤트 클릭 시 , 이벤트 정보를 담고 있다.
	var resvInfo = info.event.extendedProps; // 이벤트 정보 
	console.log("event.extendedProps : " + JSON.stringify(resvInfo));
	
	// 이벤트 시간
	var start = info.event.start;  
	var end = info.event.end;  
	
	//------------------------클릭 이벤트 시작 -----------------------------------------------
    if (end === null) {
    	end = start;
    }
    modalTitle.html('예약 정보');
 	$("#ptNumDiv").text(resvInfo.ptNm);
 	$("#ptNumDiv").attr('data-resvNum', resvInfo.resvNum); 	
 	
 	$("#ptPhoneDiv").text(resvInfo.ptPhone);
 	$("#empNumDiv").text(resvInfo.empNm);
 	$("#empNumDiv").attr('data-empNum', resvInfo.empNum);
 	
 	$("#resvCcDiv").text(resvInfo.resvCc);
 	$("#resvStatusDiv").text(resvInfo.statNm);
 	$("#resvStatusDiv").attr('data-stat', resvInfo.status);
 	
	var date = moment(start).format('YYYY년 MM월 DD일 -- HH시 mm분').split('--'); // 년월일, 시간 분리
	var endTime = moment(end).format('YYYY년 MM월 DD일  -- HH시 mm분').split('--');
	var resvDateInfo = date[0];
	var resvTimeInfo = date[1] + " ~ " + endTime[1];
   	$("#resvDateDiv").text(resvDateInfo);
   	$("#resvTimeDiv").text(resvTimeInfo);
	
    rInfoModal.modal('show');
	$('#resvInfoModal .modal-footer button').css('display','none');
	$('#modalClose').css('display','block');

	if(moment(end).format('YYYY-MM-DD HH:mm') > fullToday()){
		console.log("resvInfo.status : " + resvInfo.status);
		if(resvInfo.status == 'IN_RESV'){
			$('#implResv').css('display','block');
			$('#cancelResv').css('display','block');
		} else if(resvInfo.status == 'IMPL_RESV'){
			$('#inResv').css('display','block');
		}
	}
}