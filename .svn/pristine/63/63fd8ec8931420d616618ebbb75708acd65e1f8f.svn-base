package com.web.ddentist.ddit.community.service;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.web.ddentist.mapper.CommunityMapper;
import com.web.ddentist.vo.CommunityReplyVO;
import com.web.ddentist.vo.CommunityVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class CommunityServiceImpl implements ICommunityService {
	
	@Autowired
	CommunityMapper communityMapper;
	
	/**
	 * 커뮤니티 게시글 조회
	 * 
	 * @return 커뮤니티 게시글 목록
	 */
//	@Override
//	public List<CommunityVO> selectList() {
//		return this.communityMapper.selectList();
//	}
	
	/**
	 * 커뮤니티 게시글 상세보기
	 * 
	 * @return 커뮤니티 게시글
	 */
	@Override
	public CommunityVO detail(CommunityVO commVO) {
		return this.communityMapper.detail(commVO);
	}
	
	/**
	 * 게시글 조회수 증가
	 *
	 * @return 커뮤니티 게시글 조회수
	 */
	@Override
	public int viewCount(CommunityVO commVO) {
		return this.communityMapper.viewCount(commVO);
	}
	
	/**
	 * 게시글 수정
	 *
	 * @param 게시글 번호
	 * @return 커뮤니티 게시글 수정결과 1 또는 0
	 */
	public int updatePost(CommunityVO commVO) {
		log.info("commVO : " + commVO);
		//CommunityVO(comNum=0, ptNum=230302002, comTitle=게시글 등록, comContent=<font color="#000000"><span style="background-color: rgb(255, 255, 0);">a</span></font><p></p>, comDt=null, comInqCnt=0, ptNm=null, ptId=dong)
		int result = this.communityMapper.updatePost(commVO);
		log.info("result : " + result);
		return result;
	}
	
	/**
	 * 검색 키워드를 이용해 게시글 총 개수 구하기
	 *
	 * @param 검색 키워드
	 * @return 게시글 개수
	 */
	@Override
	public int getTotal(String keyword) {
		return this.communityMapper.getTotal(keyword);
	}
	
	/**
	 * 검색 키워드를 이용한 페이징 처리
	 *
	 * @param 검색 키워드, 현재페이지, size
	 * @return 게시글 리스트
	 */
	@Override
	public List<CommunityVO> selectList(Map<String, String> map) {
		log.info("map : " + map);
		List<CommunityVO> list = this.communityMapper.selectList(map);
		log.info("list : " + list);
		return list;
	}
	
	/**
	 * 게시글 등록
	 *
	 * @param 제목, 내용
	 * @return 게시글 등록 결과 1 또는 0
	 */
	@Override
	public int insertPost(CommunityVO commVO) {
		log.info("commVO : "+ commVO);
		int result = this.communityMapper.insertPost(commVO);
		log.info("result : "+ result);
		return result;
	}
	
	/**
	 * 게시글 삭제
	 *
	 * @param 게시글 번호
	 * @return 게시글 삭제 결과 1 또는 0
	 */
	@Override
	public int deletePost(int comNum) {
		int result = this.communityMapper.deletePost(comNum);
		return result;
	}
	/**
	 * 게시글 댓글 리스트
	 *
	 * @param  게시글 번호
	 * @return 게시글 댓글 리스트
	 */
	@Override
	public List<CommunityReplyVO> getReplyList(int commVO) {
		return this.communityMapper.getReplyList(commVO);
	}
	
	/**
	 * 게시글 댓글 등록
	 *
	 * @param  게시글 번호, 게시글 정보
	 * @return 게시글 댓글 등록 결과
	 */
	@Override
	public int insertReply(CommunityReplyVO replyVO) {
		log.info("replyVO : " + replyVO);
		int result = this.communityMapper.insertReply(replyVO);
		log.info("result : {댓글등록 결과}" + result);
		return result;
	}
	
	/**
	 * 게시글 대댓글 등록
	 *
	 * @param  게시글 번호, 댓글 정보
	 * @return 게시글 댓글 등록 결과 1 또는 0
	 */
	@Override
	public int insertReReply(CommunityReplyVO replyVO) {
		log.info("replyVO : " + replyVO);
		int result = this.communityMapper.insertReReply(replyVO);
		log.info("result : {댓글등록 결과}" + result);
		return result;
	}
}
