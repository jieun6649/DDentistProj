package com.web.ddentist.hospital.manage.empInfo.controller;

import java.sql.Date;
import java.util.List;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.web.ddentist.hospital.manage.empInfo.service.IEmpInfoService;
import com.web.ddentist.vo.CommonCodeVO;
import com.web.ddentist.vo.EmployeeVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/hospital/manage/empInfo")
public class EmpInfoController {

	@Autowired
	IEmpInfoService empInfoService;

	// 직원 정보 페이지이동
	@GetMapping("/list")
	public String detail(Model model) {
		log.info("직원정보 페이지에 왔다.");
		String commGrCd = "JBGD_CD";

		List<CommonCodeVO> jbgdList = this.empInfoService.getCommon(commGrCd);

		commGrCd = "DEPT_CD";
		List<CommonCodeVO> deptList = this.empInfoService.getCommon(commGrCd);

		model.addAttribute("jbgdList", jbgdList);
		model.addAttribute("deptList", deptList);

		return "hospital/prac";
	}

	// 직원 리스트 조회
	@ResponseBody
	@GetMapping("/empList")
	public List<EmployeeVO> empList() {
		log.info("empList에 왔다!!!");

		List<EmployeeVO> list = this.empInfoService.getList();
		log.info("직원 list : " + list);

		return list;
	}

	// 직원 정보 조회
	@ResponseBody
	@GetMapping("/getEmpInfo")
	public EmployeeVO getEmpInfo(@ModelAttribute EmployeeVO empVO) {

		log.info("getEmpInfo에 왔다!!!");
		log.info("empVO : {}", empVO);
		EmployeeVO vo = this.empInfoService.getEmpInfo(empVO);
		log.info("직원 조회 결과 : {}", vo);

		return vo;
	}

	// 골뱅이Valid는 CusVO의 validation 체크를 해주는 애너테이션
	@PostMapping("/createEmp")
	public String createPost(@Validated @ModelAttribute EmployeeVO employeeVO,
			@DateTimeFormat(pattern = "yyyy-MM-dd") Date empBrdt,
			@DateTimeFormat(pattern = "yyyy-MM-dd") Date empJncmpYmd,
			@DateTimeFormat(pattern = "yyyy-MM-dd") Date empRtrmYmd) {

		log.info("employeeVO : " + employeeVO);
		log.info("empBrdt : " + empBrdt + "empJncmpYmd : " + empJncmpYmd + "empRtrmYmd : " + empRtrmYmd);

		int result = this.empInfoService.createEmp(employeeVO);
		// errors.hasErrors() : 문제 발생 시 true

		// 입력성공 : 상세보기로 redirect. 기본키 데이터를 파라미터로 보냄
		// 요청한게 create 인데 detail로 가니까 다른페이지를 응답해주니까
		if (result > 0) {
			return "redirect:/emp/create";
		}
		return "emp/create";
	}

	// 직원정보수정
	@ResponseBody
	@PostMapping("/updateEmp")
	public int updateEmp(@ModelAttribute EmployeeVO employeeVO) {
		log.info("employeeVO : " + employeeVO);

		int result = this.empInfoService.updateEmp(employeeVO);
		log.info("result : " + result);

		return result;

	}
}
