//--------------------------------- 시간 달력 생성 끝----------------------------------------	
var deskCal = document.getElementById('deskCalendar');
if(deskCal != null){
	var deskCalendar = new FullCalendar.Calendar(deskCal, {
		locale				: 'ko',				// 한글 설정
		timeZone			: 'local',			// 시간 설정
		initialView			: 'timeGridDay',	// 일자 달력 표시  , 'dayGridWeek', 'timeGridDay', 'listWeek'
		allDaySlot			: false,			// 상단에 AllDay 출력여부
		nowIndicator		: true,				// 현재 시간 줄 표시
		eventMinHeight		: '100px',			// 이벤트 최소 높이 설정	default : 15
		//eventShortHeight	: '40px',			// 길이가 짧은 이벤트가 있을 경우, 높이 조절 default : 30
	    //businessHours		: true,				// 비즈니스 시간(토요일 일요일 배경색 회색으로 변함)
		slotEventOverlap	: false,			// 이벤트 겹침 여부 , default : true
		hiddenDays			: [],				// 달력 보기에 주말을 포함할 지 여부를 설정 default : [] (월 : 1, 일 : 0, 금 : 5)
		dayHeaders			: true,				// headr에 월 표시 여부 default : true
		height				: '390px',			// 높이 크기 조절
		slotMinTime			: '07:00:00',		// 슬롯 최소 시간 default : '00:00:00'
		slotMaxTime			: '21:00:00',		// 슬롯 최대 시간 default : '24:00:00'
		scrollTime			: '09:00:00',		// 날짜 변경시 보여지는 시간 설정	 default : 06:00:00 (오전 6시)
		scrollTimeReset		: false,			// 날짜 변경시 시간 초기화(scrollTime 시간으로 초기화) default : true
		slotDuration		: '00:15:00',		// 슬롯의 시간 설정 default : '00:30:00'
		slotLabelInterval	: '00:30',			// {hours:1} : "01:00"
	  	selectable			: true,				// 테이블 선택 가능
		selectMirror		: true,				// 테이블 선택 영역 이벤트 발생
		slotLabelFormat 	: 					// 라벨의 보여지는 시간 설정
		{					
		  	hour			: 'numeric',
		  	minute			: '2-digit',
		  	omitZeroMinute	: true,
		  	meridiem		: 'long'
		},
		customButtons		: 					// 사용자 커스텀 버튼 추가
			{					
			    addEvent 	: {
			      	text 	: '예약',
			      	click 	: function() {
			      		newEvent();
		      		},		
		   		}
	  		},
	  	select: function(arg) {
	    	console.log(arg);
	    },	
		headerToolbar 		: 
		{										// 캘린더 위 header 지정
			start	: 'prev,today', 
			center	: 'title',
		 	end		: 'addEvent,next' 
		},
		buttonText 			:					// header버튼 이름 지정
		{
			today	: '오늘',
			month	: 'month',
			week	: 'week',
			day		: 'day',
			list	: 'list'
		},
		buttonIcons			:
		{
		  	prev: 'chevron-left',
		  	next: 'chevron-right'
		},
		eventTimeFormat 	:
		{
			hour	: '2-digit',
		    minute	: '2-digit',
		    second	: '2-digit',
		    hour12	: false
		},
		/* ****************
	   	*  예약 현황 불러오기       *
	   	* ************** */
	    eventSources: [
	    	{
	    		url: '/hospital/resv/list2',
	    		method: 'get',
	     		failure: function() {
	   			alert('there was an error while fetching events!');
	     		},
			}
		],
	 	eventClick: function(info) {
	 		var element = $(info.el); // 이벤트 클릭 시 , 이벤트 정보를 담고 있다.
	 		var resvInfo = info.event.extendedProps; // 이벤트 정보 
			console.log("event.extendedProps : " + JSON.stringify(resvInfo));
			
			// 이벤트 시간
			var start = info.event.start;  
			var end = info.event.end;  
			
	 		//------------------------클릭 이벤트 시작 -----------------------------------------------
	 	    if (end === null) {
	 	    	end = start;
	 	    }
	 	    modalTitle.html('예약 정보');
	     	$("#ptNumDiv").text(resvInfo.ptNm);
	     	$("#ptNumDiv").attr('data-resvNum', resvInfo.resvNum); 	
	     	
	     	$("#ptPhoneDiv").text(resvInfo.ptPhone);
	     	$("#empNumDiv").text(resvInfo.empNm);
	     	$("#empNumDiv").attr('data-empNum', resvInfo.empNum);
	     	
	     	$("#resvCcDiv").text(resvInfo.resvCc);
	     	$("#resvStatusDiv").text(resvInfo.statNm);
	     	$("#resvStatusDiv").attr('data-stat', resvInfo.status);
	     	
	 		var date = moment(start).format('YYYY년 MM월 DD일 -- HH시 mm분').split('--'); // 년월일, 시간 분리
	 		var endTime = moment(end).format('YYYY년 MM월 DD일  -- HH시 mm분').split('--');
	 		var resvDateInfo = date[0];
	 		var resvTimeInfo = date[1] + " ~ " + endTime[1];
	 	   	$("#resvDateDiv").text(resvDateInfo);
	 	   	$("#resvTimeDiv").text(resvTimeInfo);
	 		
	 	    rInfoModal.modal('show');
	 		$('#resvInfoModal .modal-footer button').css('display','none');
	 		$('#modalClose').css('display','block');
	
	 		if(moment(end).format('YYYY-MM-DD HH:mm') > fullToday()){
	 			console.log("resvInfo.status : " + resvInfo.status);
	 			if(resvInfo.status == 'IN_RESV'){
	 				$('#implResv').css('display','block');
	 				$('#cancelResv').css('display','block');
	 			} else if(resvInfo.status == 'IMPL_RESV'){
	 				$('#inResv').css('display','block');
	 			}
	 		}
	 		//------------------------클릭 이벤트 끝 -----------------------------------------------
	  	}
	});
	// --------------------------------- 시간 달력 생성 끝----------------------------------------
};

function deskBreakTime(openTime, closeTime, sbreak ,ebreak){
	// 점심시간 체크
	var openDate = openTime + ":00";
	var closeDate = closeTime + ":00";
	
	$('#deskCalendar').find('tr').each(function(i ,v){
		var fcTd = $(this).find('td').eq(1);
		if($(this).hasClass('fc-scrollgrid-section')){
			return true;	
		}
		
		var dataTime = fcTd.attr('data-time');
		if(dataTime < openTime || (dataTime >= sbreak && dataTime < ebreak) || dataTime >= closeTime){
			fcTd.css({'background-color':'#c0c0c0	','opacity':'0.7'});			
		}
	});
}