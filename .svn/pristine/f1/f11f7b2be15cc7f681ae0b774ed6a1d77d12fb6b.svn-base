// 현재 날짜보다 이전 날짜의 데이터들중  상태가 예약 이행, 예약 취소가 아닌 항목은 예약 미이행으로 상태 변경
// 페이지 로딩과 동시 진행
$.ajax({
	url:'/hospital/resv/previousRes',
	type:'get',
	dataType:'json',
	success:function(res){
		console.log('미이행 예약 : ' + res);
		if(res > 0) {
			resvEventReLoding();
		}
	},
	error:function(err){
		simpleJustErrorAlert(err.status);
	}
});

//오픈 시간 가져오기 시작
var openTime = '';
var closeTime = '';
var sbreak = '';
var ebreak = '';
$(document).ready(function(){
	$.ajax({
		url:'/hospital/resv/openTime',
		type:'get',
		dataType:'json',
		success:function(res){
			sbreak = res.hiLunchStime.replaceAll(":" ,"");	// 휴식 시간 시작
			ebreak = res.hiLunchEtime.replaceAll(":" ,"");
			openTime = res.hiOpenTime.replaceAll(":" ,"");
			closeTime = res.hiCloseTime.replaceAll(":" ,"");
			breakTime();
		},
		error:function(err){
			simpleJustErrorAlert(err.status);
		}
	});
	
	var todayInfo = moment(new Date()).format("YYYY-MM-DD");
	console.log("todayInfotodayInfo : " + todayInfo);
	$("#resvDate").attr("min", todayInfo);
});

// 예약 시간 가져오기 시작
function resvPossible(resvDay){
	$.ajax({
		url:'/hospital/resv/resvPossible?resvDay=' + resvDay,
		type:'get',
		dataType:'json',
		success:function(res){
			console.log(res);
			var stime = '<option value="" style="display:none;">시간을 선택해주세요</option>';
			$.each(res, function(i, v){	
				if(i != res.length - 1 && v != sbreak.substr(0,2) + ":" + sbreak.substr(2)){	// 시작 시간은 0 ~ 최대길이 - 1 , 휴식 시작 시간은 없음
					stime += '<option value="' + v + '" >' + v + '</option>';
				}
			});
			//if(res == null)
			console.log(res.length)
			if(res.length == 1){
				stime += '<option value="nonTime" style="pointer-events: none;" >예약 가능한 시간이 없습니다.</option>';
			};
			$("#resvStartTime").html(stime); // 시작 날짜 추가
		},
		error:function(err){
			simpleJustErrorAlert(err.status);
		}
	});
	
	var todayInfo = moment(new Date()).format("YYYY-MM-DD");
	$("#resvDate").attr("min", todayInfo);
};
// 예약 가능 시간 가져오기 끝

// 모달 시간클릭 시 지난시간은 선택 불가
$(document).on("focus", "#resvStartTime, #resvEndTime", function(){
	// 선택불가 초기화
	$(".input-modal option").removeClass('select-inactivate');
	
	var modalDate = rDate.val();
	
	if(modalDate  == today()){
		$(this).find('option').each(function(i,v){
			var nowMinute = fullToday().split(' ')[1];
			if(v.value <= nowMinute){	
				$(this).addClass('select-inactivate');
			};
		});
	};
});

//======================의사 정보 시작====================
// 의사 정보 가져오기 시작
$.ajax({
	url:'/hospital/resv/empInfo',
	type:'get',
	dataType:'json',
	success:function(res){
		// select 의사 정보
		var empSelect = '<option value="" style="display:none;">의사를 선택하세요</option>';
		var empFilterSelect = '';
		$.each(res.empList, function(i, v){
			empFilterSelect += '<option value="' + v.EMP_NUM + '">' + v.EMP_NM + ' </option>'
		});
		
		$('#empNum').html(empSelect + empFilterSelect);	// select 의사 정보 추가
		$("#emp_filter").html(empFilterSelect);			// select filter 의사 정보 추가
		
		var resvState = '';
		$.each(res.resvStatList, function(i, v){
			resvState += '<option value="' + v.COMM_CD_NM + '" data-color' + v.COLOR + '">' + v.COMM_CD_CNT + ' </option>'
		});
		$('#type_filter').html(resvState);	// select 예약현황
	},
	error:function(err){
		simpleJustErrorAlert(err.status);
	}
});

//예약 가능 의사만 표시
$(document).on("focus", "#empNum",function(){ dateChange(); });

//날짜 변경시 예약 가능 의사 가져오기 이벤트
function dateChange(){
	//선택 불가 css 초기화
	$("select option").removeClass('select-inactivate');
	var day = rDate.val();
	var stime = rStartT.val();
	var resvEt = $(".resvEt.seleteResvEt").attr("value");
	var etime = resvEndTime(stime, resvEt);
	
	if(day == '' || stime == ''|| etime == '' || stime == 'nonTime'){ return; }
	
	var sdate = day + " " + stime;
	var edate = day + " " + etime;
	
	$.ajax({
		url:'/hospital/resv/selectOption?sdate=' + sdate + '&edate=' + edate,
		contentType:'application.json;charset=utf-8',
		type:'get',
		dataType:'json',
		success:function(res){
			$.each(res, function(i, v){
				var empNm = "#" + v;
				console.log(empNm);
				$("select option[value*=" + v + "]").addClass('select-inactivate');
			});		
		},
		error:function(err){
			simpleJustErrorAlert(err.status);
		}
	});
}
//======================의사 정보 끝 ====================

function eventDetailInfo(info){
	var resvInfo = info.event.extendedProps; // 이벤트 정보 
	// console.log("event.extendedProps : " + JSON.stringify(resvInfo));
	
	// 이벤트 시간
	var start = info.event.start;  
	var end = info.event.end;  
	
	//------------------------클릭 이벤트 시작 -----------------------------------------------
    if (end === null) {
    	end = start;
    }
	
	// 예약정보 모달 제목
    $("#infoModal").html('예약 정보');
    $("#infoModal").css("color","#ffffff");
    $("#infoModalClose").css("color","#ffffff");
	$("#infoModal").parent().css("background-color",info.event.backgroundColor);
	
	// 이름 앞에 느낌표 있을 시 경고문구 출력
	if(resvInfo.ptNm.indexOf("!") < 0 ){
 		$("#ptNumDiv").text(resvInfo.ptNm);
	} else {
		$("#ptNumDiv").text(resvInfo.ptNm.replaceAll("!",""))
		.append('<span style="color:red; font-size:0.5em;"> *예약 미이행이 잦은 환자입니다! </span>');
	}
 	$("#ptNumDiv").attr('data-resvNum', resvInfo.resvNum); 	
 	
 	$("#ptPhoneDiv").text(resvInfo.ptPhone);
 	$("#empNumDiv").text(resvInfo.empNm);
 	$("#empNumDiv").attr('data-empNum', resvInfo.empNum);
 	var ptCc = '';

	if(resvInfo.resvCc == null) {
		ptCc = '미기입';
	} else {
		ptCc= resvInfo.resvCc;
	}
 	$("#resvCcDiv").html(ptCc);
 	$("#resvStatusDiv").text(resvInfo.statNm);
 	$("#resvStatusDiv").attr('data-stat', resvInfo.status);
 	
	var date = moment(start).format('YYYY년 MM월 DD일 -- HH시 mm분').split('--'); // 년월일, 시간 분리
	var endTime = moment(end).format('YYYY년 MM월 DD일  -- HH시 mm분').split('--');
	var resvDateInfo = date[0];
	var resvTimeInfo = date[1] + " ~ " + endTime[1];
   	$("#resvDateDiv").text(resvDateInfo);
   	$("#resvTimeDiv").text(resvTimeInfo);
    
	$('#resvInfoModal .modal-footer button').css('display','none');
	$('#modalClose').css('display','block');

	if(moment(end).format('YYYY-MM-DD HH:mm') > fullToday()){
		console.log("resvInfo.status : " + resvInfo.status);
		if(resvInfo.status == 'IN_RESV'){
			$('#implResv').css('display','block');
			$('#cancelResv').css('display','block');
		} else if(resvInfo.status == 'IMPL_RESV'){
			$('#inResv').css('display','block');
		}
	}
	rInfoModal.modal('show');
}

//----------------------예약 상태 변경 시작-------------------
// 예약 취소
$('#cancelResv').on('click', function () { 
	var title = '예약 취소'	;
	var text = '예약을 취소하시겠습니까?';	
	var state = $(this).val();
	resvState(title, text, state);
});
// 예약 이행
$('#implResv').on('click', function () { 
	var title = '예약 이행'	;
	var text = '예약을 이행하시겠습니까?';	
	var state = $(this).val();
	resvState(title, text, state);
});
//예약 이행 취소
$('#inResv').on('click', function () { 
	var title = '예약이행 취소'	;
	var text = '예약 이행을 취소하시겠습니까?';	
	var state = $(this).val();
	resvState(title, text, state);
});

//확인 취소 여부 함수
function resvState(title, text, state){
	Swal.fire({
		title: title,
		text: text,
		showDenyButton: true,
		confirmButtonText: '확인',
		denyButtonText: '취소',
	}).then((result) => {
		if (result.isConfirmed) {
			crudState(state); 
		} 
	});
}
//예약 상태 변경
function crudState(param){
	rInfoModal.modal('hide');
	var resvNum = $("#ptNumDiv").attr("data-resvNum");
	
	var changeStat = param;
	var data = { 
    	'resvId' : resvNum,
    	'resvStatus' : changeStat
	}
	console.log(data);
	// header
    const csrfToken = $('#_csrfToken').val(); 
    // 상태 변경
    $.ajax({
        type: "post",
        url: "/hospital/resv/changeStat",
        data: JSON.stringify(data),
        dataType: 'json',
        beforeSend: function(xhr) {
        	xhr.setRequestHeader('Content-Type', 'application/json;charset=utf-8');
        	xhr.setRequestHeader('X-CSRF-TOKEN', csrfToken);
        },
        success: function (response) {
        	var res = '비정상적인 접근입니다.';
            if(response == 1){
            	if(data.resvStatus == 'CANCEL_RESV'){ res='예약이 취소되었습니다.'};
            	if(data.resvStatus == 'IMPL_RESV'){ res='예약이행 완료' };
            	if(data.resvStatus == 'IN_RESV'){ res='예약이행이 취소되었습니다.' };
            	
            	resvEventReLoding();
            	simpleSuccessAlert(res);
            } else {
            	simpleErrorAlert('변경 실패하였습니다.');
            };
        }
    });
};
//----------------------예약 상태 변경 끝-------------------

function today() {	// 오늘 날짜 포멧 2022-12-12
    var d = new Date();
    return d.getFullYear() + "-" 
		+ ((d.getMonth() + 1) > 9 ? (d.getMonth() + 1).toString() : "0" + (d.getMonth() + 1)) + "-" 
		+ (d.getDate() > 9 ? d.getDate().toString() : "0" + d.getDate().toString());
}

function fullToday(){ //년월일시분초 문자열 생성 2022-12-12 12:12:12
    var d = new Date();
    return d.getFullYear() + "-" 
			+ ((d.getMonth() + 1) > 9 ? (d.getMonth() + 1).toString() : "0" + (d.getMonth() + 1)) + "-" 
			+ (d.getDate() > 9 ? d.getDate().toString() : "0" + d.getDate().toString()) + " " 
			+ (d.getHours() > 9 ? d.getHours().toString() : "0" + d.getHours().toString()) + ":" 
			+ (d.getMinutes() > 9 ? d.getMinutes().toString() : "0" + d.getMinutes().toString());
}