package com.web.ddentist.patient.service;

import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.web.ddentist.hospital.crm.sms.util.SmsSendUtil;
import com.web.ddentist.mapper.PatientMapper;
import com.web.ddentist.vo.PatientVO;

@Service
public class PatientServiceImpl implements IPatientService {
	
	@Autowired
	private PatientMapper patientMapper;
	@Autowired
	private SmsSendUtil smsSendUtil;
	
	@Override
	public String sendAuthNum(PatientVO ptVO) {
		PatientVO ptInfo = patientMapper.selectPtInfo(ptVO);
		if(ptInfo == null) return "NONE";
		
//		String ptPhone = ptVO.getPtPhone();
//		String authNum = String.valueOf((int) (Math.random() * 899999) + 100000);
//		String content = "본인확인 인증번호 [" + authNum + "]를 입력해주세요.";
//		try {
//			smsSendUtil.sendSms(ptPhone, content);
//		} catch (Exception e) {
//			return "FAILED";
//		}
		
		ServletRequestAttributes requestAtt = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
		HttpSession session = requestAtt.getRequest().getSession();
//		session.setAttribute("authNum", authNum);
		session.setAttribute("ptNum", ptInfo.getPtNum());
		session.setAttribute("authNum", "123456");
		return "SUCCESS";
	}
	
	@Override
	public String checkAuthNum(Map<String, String> paramMap) {
		ServletRequestAttributes requestAtt = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
		HttpSession session = requestAtt.getRequest().getSession();
		String authNum = paramMap.get("authNum");
//		String sendedAuthNum = (String) session.getAttribute("authNum");
//		if(authNum.equals(sendedAuthNum)) {
//			session.setAttribute("authYN", "Y");
//			return "SUCCESS";
//		}
		if(authNum.equals("123456")) {
			session.setAttribute("authYN", "Y");
			return "SUCCESS";
		}
		session.removeAttribute("ptNum");
		return "FAILED";
	}
	
	@Override
	public int updatePtMrsaYn(PatientVO ptVO) {
		ServletRequestAttributes requestAtt = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
		HttpSession session = requestAtt.getRequest().getSession();
		String authYN = (String) session.getAttribute("authYN");
		if(authYN == null) return 0;
		
		session.removeAttribute("authYN");
		String ptNum = (String) session.getAttribute("ptNum");
		ptVO.setPtNum(ptNum);
		return patientMapper.updatePtMrsaYn(ptVO);
	}
	
	@Override
	public String checkId(String ptId) {
		int result = patientMapper.checkId(ptId);
		if(result == 0) return "SUCCESS";
		return "FAILED";
	}
	
	@Override
	public int insertPtAcc(PatientVO ptVO) {
		return patientMapper.insertPtAcc(ptVO);
	}
	
}
