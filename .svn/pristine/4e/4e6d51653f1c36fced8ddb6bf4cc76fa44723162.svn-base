package com.web.ddentist.hospital.chart.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.web.ddentist.mapper.ChartMapper;
import com.web.ddentist.vo.CheckupVO;
import com.web.ddentist.vo.PiVO;
import com.web.ddentist.vo.RegistVO;
import com.web.ddentist.vo.ReservationVO;

@Service
public class ChartServiceImpl implements IChartService {
	
	@Autowired
	private ChartMapper chartMapper;
	
	@Override
	public List<RegistVO> listRegist() {
		return chartMapper.listRegist();
	}
	
	@Override
	public List<ReservationVO> listResv() {
		return chartMapper.listResv();
	}
	
	@Transactional
	@Override
	public String insertCheckup(CheckupVO chkVO) {
		int result = chartMapper.insertCheckup(chkVO);
		if(result == 0) return "FAILED";
		
		String regNum = chkVO.getRegNum();
		result = chartMapper.updateRegStatusInTreat(regNum);
		if(result == 0) return "FAILED";
		
		return "SUCCESS";
	}
	
	@Override
	public String insertPi(PiVO piVO) {
		
		List<PiVO> piList = new ArrayList<>();
		String[] teethArr = piVO.getToothNum().split(",");
		
		for(String toothNum : teethArr) {
			PiVO pi = new PiVO();
			pi.setChkNum(piVO.getChkNum());
			pi.setDisCd(piVO.getDisCd());
			pi.setToothNum(toothNum);
			pi.setPiContent(piVO.getPiContent());
			pi.setPiHist(piVO.getPiHist());
			
			piList.add(pi);
		}
		
		int result = chartMapper.insertPi(piList);
		if(result == 0) return "FAILED";
		
		return "SUCCESS";
	}
	
	
	@Transactional
	@Override
	public Map<String, Object> listChart(String ptNum) {
		
		Map<String, Object> chartMap = new HashMap<>();
		chartMap.put("piList", chartMapper.listPi(ptNum));
		chartMap.put("txpList", chartMapper.listTxPlan(ptNum));
		chartMap.put("txList", chartMapper.listTx(ptNum));
		chartMap.put("txnList", chartMapper.listTxNext(ptNum));
		
		return chartMap;
	}
}
